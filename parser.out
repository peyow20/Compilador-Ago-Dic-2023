Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARR
    CORCHDER
    CORCHIZQ
    FOR
    MEDIA
    MOD
    PUN
    TO

Grammar

Rule 0     S' -> program
Rule 1     program -> goto_main PROGRAM ID PUNCOM VAR vars acum_func aux_goto_main main
Rule 2     main -> MAIN PARIZQ PARDER bloque
Rule 3     funcion -> FUNC TIPO ID insert_dirfunc PARIZQ param PARDER save_params vars_local bloque_func RETURN exp PUNCOM end_function
Rule 4     funcion -> FUNC VOID ID insert_dirfunc PARIZQ param PARDER save_params vars_local bloque_func RETURN PUNCOM end_function
Rule 5     param -> TIPO ID COMA param
Rule 6     param -> TIPO ID
Rule 7     param -> empty
Rule 8     acum_func -> funcion acum_func
Rule 9     acum_func -> empty
Rule 10    call_func -> ID func_name_call PARIZQ gen_era argumentos_llamada verify_param_count PARDER generate_gosub PUNCOM
Rule 11    argumentos_llamada -> expresion verify_argument_type COMA argumentos_llamada increment_param_counter
Rule 12    argumentos_llamada -> expresion verify_argument_type
Rule 13    argumentos_llamada -> empty
Rule 14    id_lista -> ID COMA id_lista
Rule 15    id_lista -> ID
Rule 16    vars -> id_lista DOSPUN TIPO PUNCOM vars
Rule 17    vars -> empty
Rule 18    TIPO -> INT
Rule 19    TIPO -> FLOAT
Rule 20    TIPO -> CHAR
Rule 21    TIPO -> BOOL
Rule 22    bloque -> LLAVIZQ multiples_estatutos LLAVDER
Rule 23    estatuto -> asignacion
Rule 24    estatuto -> condicion
Rule 25    estatuto -> escritura
Rule 26    estatuto -> lectura
Rule 27    estatuto -> while_condicion
Rule 28    estatuto -> call_func
Rule 29    estatuto -> funcion_media
Rule 30    multiples_estatutos -> estatuto multiples_estatutos
Rule 31    multiples_estatutos -> empty
Rule 32    asignacion -> ID IGUAL expresion PUNCOM
Rule 33    lectura -> READ PARIZQ ID PARDER PUNCOM
Rule 34    escritura -> WRITE PARIZQ print_expresion PARDER PUNCOM
Rule 35    print_expresion -> expresion multiples_print
Rule 36    print_expresion -> CTESTRING multiples_print
Rule 37    multiples_print -> COMA print_expresion
Rule 38    multiples_print -> empty
Rule 39    condicion -> IF PARIZQ expresion PARDER verificar_if bloque verificar_bloque_if PUNCOM
Rule 40    condicion -> IF PARIZQ expresion PARDER verificar_if bloque verificar_bloque_else ELSE bloque verificar_bloque_if PUNCOM
Rule 41    while_condicion -> WHILE PARIZQ save_position_while expresion check_while_exp PARDER DO bloque fill_jump_while
Rule 42    expresion -> expresion AND expresion
Rule 43    expresion -> expresion OR expresion
Rule 44    expresion -> exp
Rule 45    expresion -> exp MAYOR exp
Rule 46    expresion -> exp MENOR exp
Rule 47    expresion -> exp DIFF exp
Rule 48    expresion -> exp IGIG exp
Rule 49    expresion -> exp MAYIG exp
Rule 50    expresion -> exp MENIG exp
Rule 51    exp -> termino exp_operacion
Rule 52    exp_operacion -> MAS termino exp_operacion
Rule 53    exp_operacion -> MENOS termino exp_operacion
Rule 54    exp_operacion -> empty
Rule 55    termino -> factor termino_operador
Rule 56    termino_operador -> POR factor termino_operador
Rule 57    termino_operador -> DIV factor termino_operador
Rule 58    termino_operador -> empty
Rule 59    factor -> PARIZQ expresion PARDER
Rule 60    factor -> MAS var_cte
Rule 61    factor -> MENOS var_cte
Rule 62    factor -> var_cte
Rule 63    factor -> empty
Rule 64    var_cte -> ID
Rule 65    var_cte -> CTEI
Rule 66    var_cte -> CTEF
Rule 67    var_cte -> CTEC
Rule 68    var_cte -> CTEB
Rule 69    empty -> <empty>
Rule 70    goto_main -> <empty>
Rule 71    aux_goto_main -> <empty>
Rule 72    verificar_if -> <empty>
Rule 73    verificar_bloque_if -> <empty>
Rule 74    verificar_bloque_else -> <empty>
Rule 75    save_position_while -> <empty>
Rule 76    check_while_exp -> <empty>
Rule 77    fill_jump_while -> <empty>
Rule 78    insert_dirfunc -> <empty>
Rule 79    save_params -> <empty>
Rule 80    vars_local -> VAR vars
Rule 81    bloque_func -> start_cuad bloque
Rule 82    start_cuad -> <empty>
Rule 83    end_function -> <empty>
Rule 84    generate_gosub -> <empty>
Rule 85    verify_param_count -> <empty>
Rule 86    increment_param_counter -> <empty>
Rule 87    verify_argument_type -> <empty>
Rule 88    func_name_call -> <empty>
Rule 89    gen_era -> <empty>

Terminals, with rules where they appear

AND                  : 42
ARR                  : 
BOOL                 : 21
CHAR                 : 20
COMA                 : 5 11 14 37
CORCHDER             : 
CORCHIZQ             : 
CTEB                 : 68
CTEC                 : 67
CTEF                 : 66
CTEI                 : 65
CTESTRING            : 36
DIFF                 : 47
DIV                  : 57
DO                   : 41
DOSPUN               : 16
ELSE                 : 40
FLOAT                : 19
FOR                  : 
FUNC                 : 3 4
ID                   : 1 3 4 5 6 10 14 15 32 33 64
IF                   : 39 40
IGIG                 : 48
IGUAL                : 32
INT                  : 18
LLAVDER              : 22
LLAVIZQ              : 22
MAIN                 : 2
MAS                  : 52 60
MAYIG                : 49
MAYOR                : 45
MEDIA                : 
MENIG                : 50
MENOR                : 46
MENOS                : 53 61
MOD                  : 
OR                   : 43
PARDER               : 2 3 4 10 33 34 39 40 41 59
PARIZQ               : 2 3 4 10 33 34 39 40 41 59
POR                  : 56
PROGRAM              : 1
PUN                  : 
PUNCOM               : 1 3 4 10 16 32 33 34 39 40
READ                 : 33
RETURN               : 3 4
TO                   : 
VAR                  : 1 80
VOID                 : 4
WHILE                : 41
WRITE                : 34
error                : 

Nonterminals, with rules where they appear

TIPO                 : 3 5 6 16
acum_func            : 1 8
argumentos_llamada   : 10 11
asignacion           : 23
aux_goto_main        : 1
bloque               : 2 39 40 40 41 81
bloque_func          : 3 4
call_func            : 28
check_while_exp      : 41
condicion            : 24
empty                : 7 9 13 17 31 38 54 58 63
end_function         : 3 4
escritura            : 25
estatuto             : 30
exp                  : 3 44 45 45 46 46 47 47 48 48 49 49 50 50
exp_operacion        : 51 52 53
expresion            : 11 12 32 35 39 40 41 42 42 43 43 59
factor               : 55 56 57
fill_jump_while      : 41
func_name_call       : 10
funcion              : 8
funcion_media        : 29
gen_era              : 10
generate_gosub       : 10
goto_main            : 1
id_lista             : 14 16
increment_param_counter : 11
insert_dirfunc       : 3 4
lectura              : 26
main                 : 1
multiples_estatutos  : 22 30
multiples_print      : 35 36
param                : 3 4 5
print_expresion      : 34 37
program              : 0
save_params          : 3 4
save_position_while  : 41
start_cuad           : 81
termino              : 51 52 53
termino_operador     : 55 56 57
var_cte              : 60 61 62
vars                 : 1 16 80
vars_local           : 3 4
verificar_bloque_else : 40
verificar_bloque_if  : 39 40
verificar_if         : 39 40
verify_argument_type : 11 12
verify_param_count   : 10
while_condicion      : 27

