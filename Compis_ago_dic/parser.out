Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARR
    CORCHDER
    CORCHIZQ
    MOD
    RETURN
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID PUNCOM vars acum_func MAIN PARIZQ PARDER bloque
Rule 2     funcion -> FUNC TIPO ID PARIZQ TIPO ID PARDER vars bloque
Rule 3     funcion -> empty
Rule 4     acum_func -> funcion acum_func
Rule 5     acum_func -> empty
Rule 6     vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id
Rule 7     id -> ID acum_id
Rule 8     acum_id -> COMA ID acum_id
Rule 9     acum_id -> empty
Rule 10    asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id
Rule 11    asignacion_id -> empty
Rule 12    TIPO -> INT
Rule 13    TIPO -> FLOAT
Rule 14    TIPO -> CHAR
Rule 15    bloque -> LLAVIZQ multiples_estatutos LLAVDER
Rule 16    estatuto -> asignacion
Rule 17    estatuto -> condicion
Rule 18    estatuto -> escritura
Rule 19    multiples_estatutos -> estatuto multiples_estatutos
Rule 20    multiples_estatutos -> empty
Rule 21    asignacion -> ID IGUAL expresion PUNCOM
Rule 22    escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM
Rule 23    print_expresion -> expresion multiples_print
Rule 24    print_expresion -> CTESTRING multiples_print
Rule 25    multiples_print -> COMA print_expresion
Rule 26    multiples_print -> empty
Rule 27    condicion -> IF PARIZQ expresion PARDER bloque PUNCOM
Rule 28    condicion -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM
Rule 29    else_condicion -> ELSE bloque
Rule 30    while_condicion -> WHILE PARIZQ expresion PARDER DO bloque
Rule 31    for_condicion -> FOR asignacion TO expresion DO bloque
Rule 32    expresion -> expresion AND expresion
Rule 33    expresion -> expresion OR expresion
Rule 34    expresion -> exp
Rule 35    expresion -> exp MAYOR exp
Rule 36    expresion -> exp MENOR exp
Rule 37    expresion -> exp DIFF exp
Rule 38    exp -> termino exp_operacion
Rule 39    exp_operacion -> MAS termino exp_operacion
Rule 40    exp_operacion -> MENOS termino exp_operacion
Rule 41    exp_operacion -> empty
Rule 42    termino -> factor termino_operador
Rule 43    termino_operador -> POR factor termino_operador
Rule 44    termino_operador -> DIV factor termino_operador
Rule 45    termino_operador -> empty
Rule 46    factor -> PARIZQ expresion PARDER
Rule 47    factor -> MAS var_cte
Rule 48    factor -> MENOS var_cte
Rule 49    factor -> var_cte
Rule 50    factor -> empty
Rule 51    var_cte -> ID
Rule 52    var_cte -> CTEI
Rule 53    var_cte -> CTEF
Rule 54    var_cte -> CTEC
Rule 55    empty -> <empty>

Terminals, with rules where they appear

AND                  : 32
ARR                  : 
CHAR                 : 14
COMA                 : 8 25
CORCHDER             : 
CORCHIZQ             : 
CTEC                 : 54
CTEF                 : 53
CTEI                 : 52
CTESTRING            : 24
DIFF                 : 37
DIV                  : 44
DO                   : 30 31
DOSPUN               : 6 10
ELSE                 : 29
FLOAT                : 13
FOR                  : 31
FUNC                 : 2
ID                   : 1 2 2 7 8 21 51
IF                   : 27 28
IGUAL                : 21
INT                  : 12
LLAVDER              : 15
LLAVIZQ              : 15
MAIN                 : 1
MAS                  : 39 47
MAYOR                : 35
MENOR                : 36
MENOS                : 40 48
MOD                  : 
OR                   : 33
PARDER               : 1 2 22 27 28 30 46
PARIZQ               : 1 2 22 27 28 30 46
POR                  : 43
PRINT                : 22
PROGRAM              : 1
PUNCOM               : 1 6 10 21 22 27 28
RETURN               : 
TO                   : 31
VAR                  : 6
VOID                 : 
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

TIPO                 : 2 2 6 10
acum_func            : 1 4
acum_id              : 7 8
asignacion           : 16 31
asignacion_id        : 6 10
bloque               : 1 2 27 28 29 30 31
condicion            : 17
else_condicion       : 28
empty                : 3 5 9 11 20 26 41 45 50
escritura            : 18
estatuto             : 19
exp                  : 34 35 35 36 36 37 37
exp_operacion        : 38 39 40
expresion            : 21 23 27 28 30 31 32 32 33 33 46
factor               : 42 43 44
for_condicion        : 
funcion              : 4
id                   : 6 10
multiples_estatutos  : 15 19
multiples_print      : 23 24
print_expresion      : 22 25
program              : 0
termino              : 38 39 40
termino_operador     : 42 43 44
var_cte              : 47 48 49
vars                 : 1 2
while_condicion      : 

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID PUNCOM vars acum_func MAIN PARIZQ PARDER bloque

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID PUNCOM vars acum_func MAIN PARIZQ PARDER bloque

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . PUNCOM vars acum_func MAIN PARIZQ PARDER bloque

    PUNCOM          shift and go to state 4


state 4

    (1) program -> PROGRAM ID PUNCOM . vars acum_func MAIN PARIZQ PARDER bloque
    (6) vars -> . VAR id DOSPUN TIPO PUNCOM asignacion_id

    VAR             shift and go to state 6

    vars                           shift and go to state 5

state 5

    (1) program -> PROGRAM ID PUNCOM vars . acum_func MAIN PARIZQ PARDER bloque
    (4) acum_func -> . funcion acum_func
    (5) acum_func -> . empty
    (2) funcion -> . FUNC TIPO ID PARIZQ TIPO ID PARDER vars bloque
    (3) funcion -> . empty
    (55) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 10
    MAIN            reduce using rule 55 (empty -> .)

  ! FUNC            [ reduce using rule 55 (empty -> .) ]

    acum_func                      shift and go to state 7
    funcion                        shift and go to state 8
    empty                          shift and go to state 9

state 6

    (6) vars -> VAR . id DOSPUN TIPO PUNCOM asignacion_id
    (7) id -> . ID acum_id

    ID              shift and go to state 12

    id                             shift and go to state 11

state 7

    (1) program -> PROGRAM ID PUNCOM vars acum_func . MAIN PARIZQ PARDER bloque

    MAIN            shift and go to state 13


state 8

    (4) acum_func -> funcion . acum_func
    (4) acum_func -> . funcion acum_func
    (5) acum_func -> . empty
    (2) funcion -> . FUNC TIPO ID PARIZQ TIPO ID PARDER vars bloque
    (3) funcion -> . empty
    (55) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 10
    MAIN            reduce using rule 55 (empty -> .)

  ! FUNC            [ reduce using rule 55 (empty -> .) ]

    funcion                        shift and go to state 8
    acum_func                      shift and go to state 14
    empty                          shift and go to state 9

state 9

    (5) acum_func -> empty .
    (3) funcion -> empty .

  ! reduce/reduce conflict for MAIN resolved using rule 3 (funcion -> empty .)
    FUNC            reduce using rule 3 (funcion -> empty .)
    MAIN            reduce using rule 3 (funcion -> empty .)

  ! MAIN            [ reduce using rule 5 (acum_func -> empty .) ]


state 10

    (2) funcion -> FUNC . TIPO ID PARIZQ TIPO ID PARDER vars bloque
    (12) TIPO -> . INT
    (13) TIPO -> . FLOAT
    (14) TIPO -> . CHAR

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    TIPO                           shift and go to state 15

state 11

    (6) vars -> VAR id . DOSPUN TIPO PUNCOM asignacion_id

    DOSPUN          shift and go to state 19


state 12

    (7) id -> ID . acum_id
    (8) acum_id -> . COMA ID acum_id
    (9) acum_id -> . empty
    (55) empty -> .

    COMA            shift and go to state 21
    DOSPUN          reduce using rule 55 (empty -> .)

    acum_id                        shift and go to state 20
    empty                          shift and go to state 22

state 13

    (1) program -> PROGRAM ID PUNCOM vars acum_func MAIN . PARIZQ PARDER bloque

    PARIZQ          shift and go to state 23


state 14

    (4) acum_func -> funcion acum_func .

    MAIN            reduce using rule 4 (acum_func -> funcion acum_func .)


state 15

    (2) funcion -> FUNC TIPO . ID PARIZQ TIPO ID PARDER vars bloque

    ID              shift and go to state 24


state 16

    (12) TIPO -> INT .

    ID              reduce using rule 12 (TIPO -> INT .)
    PUNCOM          reduce using rule 12 (TIPO -> INT .)


state 17

    (13) TIPO -> FLOAT .

    ID              reduce using rule 13 (TIPO -> FLOAT .)
    PUNCOM          reduce using rule 13 (TIPO -> FLOAT .)


state 18

    (14) TIPO -> CHAR .

    ID              reduce using rule 14 (TIPO -> CHAR .)
    PUNCOM          reduce using rule 14 (TIPO -> CHAR .)


state 19

    (6) vars -> VAR id DOSPUN . TIPO PUNCOM asignacion_id
    (12) TIPO -> . INT
    (13) TIPO -> . FLOAT
    (14) TIPO -> . CHAR

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    TIPO                           shift and go to state 25

state 20

    (7) id -> ID acum_id .

    DOSPUN          reduce using rule 7 (id -> ID acum_id .)


state 21

    (8) acum_id -> COMA . ID acum_id

    ID              shift and go to state 26


state 22

    (9) acum_id -> empty .

    DOSPUN          reduce using rule 9 (acum_id -> empty .)


state 23

    (1) program -> PROGRAM ID PUNCOM vars acum_func MAIN PARIZQ . PARDER bloque

    PARDER          shift and go to state 27


state 24

    (2) funcion -> FUNC TIPO ID . PARIZQ TIPO ID PARDER vars bloque

    PARIZQ          shift and go to state 28


state 25

    (6) vars -> VAR id DOSPUN TIPO . PUNCOM asignacion_id

    PUNCOM          shift and go to state 29


state 26

    (8) acum_id -> COMA ID . acum_id
    (8) acum_id -> . COMA ID acum_id
    (9) acum_id -> . empty
    (55) empty -> .

    COMA            shift and go to state 21
    DOSPUN          reduce using rule 55 (empty -> .)

    acum_id                        shift and go to state 30
    empty                          shift and go to state 22

state 27

    (1) program -> PROGRAM ID PUNCOM vars acum_func MAIN PARIZQ PARDER . bloque
    (15) bloque -> . LLAVIZQ multiples_estatutos LLAVDER

    LLAVIZQ         shift and go to state 32

    bloque                         shift and go to state 31

state 28

    (2) funcion -> FUNC TIPO ID PARIZQ . TIPO ID PARDER vars bloque
    (12) TIPO -> . INT
    (13) TIPO -> . FLOAT
    (14) TIPO -> . CHAR

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    TIPO                           shift and go to state 33

state 29

    (6) vars -> VAR id DOSPUN TIPO PUNCOM . asignacion_id
    (10) asignacion_id -> . id DOSPUN TIPO PUNCOM asignacion_id
    (11) asignacion_id -> . empty
    (7) id -> . ID acum_id
    (55) empty -> .

    ID              shift and go to state 12
    FUNC            reduce using rule 55 (empty -> .)
    MAIN            reduce using rule 55 (empty -> .)
    LLAVIZQ         reduce using rule 55 (empty -> .)

    id                             shift and go to state 34
    asignacion_id                  shift and go to state 35
    empty                          shift and go to state 36

state 30

    (8) acum_id -> COMA ID acum_id .

    DOSPUN          reduce using rule 8 (acum_id -> COMA ID acum_id .)


state 31

    (1) program -> PROGRAM ID PUNCOM vars acum_func MAIN PARIZQ PARDER bloque .

    $end            reduce using rule 1 (program -> PROGRAM ID PUNCOM vars acum_func MAIN PARIZQ PARDER bloque .)


state 32

    (15) bloque -> LLAVIZQ . multiples_estatutos LLAVDER
    (19) multiples_estatutos -> . estatuto multiples_estatutos
    (20) multiples_estatutos -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . escritura
    (55) empty -> .
    (21) asignacion -> . ID IGUAL expresion PUNCOM
    (27) condicion -> . IF PARIZQ expresion PARDER bloque PUNCOM
    (28) condicion -> . IF PARIZQ expresion PARDER bloque else_condicion PUNCOM
    (22) escritura -> . PRINT PARIZQ print_expresion PARDER PUNCOM

    LLAVDER         reduce using rule 55 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 44
    PRINT           shift and go to state 45

    multiples_estatutos            shift and go to state 37
    estatuto                       shift and go to state 38
    empty                          shift and go to state 39
    asignacion                     shift and go to state 40
    condicion                      shift and go to state 41
    escritura                      shift and go to state 42

state 33

    (2) funcion -> FUNC TIPO ID PARIZQ TIPO . ID PARDER vars bloque

    ID              shift and go to state 46


state 34

    (10) asignacion_id -> id . DOSPUN TIPO PUNCOM asignacion_id

    DOSPUN          shift and go to state 47


state 35

    (6) vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id .

    FUNC            reduce using rule 6 (vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id .)
    MAIN            reduce using rule 6 (vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id .)
    LLAVIZQ         reduce using rule 6 (vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id .)


state 36

    (11) asignacion_id -> empty .

    FUNC            reduce using rule 11 (asignacion_id -> empty .)
    MAIN            reduce using rule 11 (asignacion_id -> empty .)
    LLAVIZQ         reduce using rule 11 (asignacion_id -> empty .)


state 37

    (15) bloque -> LLAVIZQ multiples_estatutos . LLAVDER

    LLAVDER         shift and go to state 48


state 38

    (19) multiples_estatutos -> estatuto . multiples_estatutos
    (19) multiples_estatutos -> . estatuto multiples_estatutos
    (20) multiples_estatutos -> . empty
    (16) estatuto -> . asignacion
    (17) estatuto -> . condicion
    (18) estatuto -> . escritura
    (55) empty -> .
    (21) asignacion -> . ID IGUAL expresion PUNCOM
    (27) condicion -> . IF PARIZQ expresion PARDER bloque PUNCOM
    (28) condicion -> . IF PARIZQ expresion PARDER bloque else_condicion PUNCOM
    (22) escritura -> . PRINT PARIZQ print_expresion PARDER PUNCOM

    LLAVDER         reduce using rule 55 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 44
    PRINT           shift and go to state 45

    estatuto                       shift and go to state 38
    multiples_estatutos            shift and go to state 49
    empty                          shift and go to state 39
    asignacion                     shift and go to state 40
    condicion                      shift and go to state 41
    escritura                      shift and go to state 42

state 39

    (20) multiples_estatutos -> empty .

    LLAVDER         reduce using rule 20 (multiples_estatutos -> empty .)


state 40

    (16) estatuto -> asignacion .

    ID              reduce using rule 16 (estatuto -> asignacion .)
    IF              reduce using rule 16 (estatuto -> asignacion .)
    PRINT           reduce using rule 16 (estatuto -> asignacion .)
    LLAVDER         reduce using rule 16 (estatuto -> asignacion .)


state 41

    (17) estatuto -> condicion .

    ID              reduce using rule 17 (estatuto -> condicion .)
    IF              reduce using rule 17 (estatuto -> condicion .)
    PRINT           reduce using rule 17 (estatuto -> condicion .)
    LLAVDER         reduce using rule 17 (estatuto -> condicion .)


state 42

    (18) estatuto -> escritura .

    ID              reduce using rule 18 (estatuto -> escritura .)
    IF              reduce using rule 18 (estatuto -> escritura .)
    PRINT           reduce using rule 18 (estatuto -> escritura .)
    LLAVDER         reduce using rule 18 (estatuto -> escritura .)


state 43

    (21) asignacion -> ID . IGUAL expresion PUNCOM

    IGUAL           shift and go to state 50


state 44

    (27) condicion -> IF . PARIZQ expresion PARDER bloque PUNCOM
    (28) condicion -> IF . PARIZQ expresion PARDER bloque else_condicion PUNCOM

    PARIZQ          shift and go to state 51


state 45

    (22) escritura -> PRINT . PARIZQ print_expresion PARDER PUNCOM

    PARIZQ          shift and go to state 52


state 46

    (2) funcion -> FUNC TIPO ID PARIZQ TIPO ID . PARDER vars bloque

    PARDER          shift and go to state 53


state 47

    (10) asignacion_id -> id DOSPUN . TIPO PUNCOM asignacion_id
    (12) TIPO -> . INT
    (13) TIPO -> . FLOAT
    (14) TIPO -> . CHAR

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18

    TIPO                           shift and go to state 54

state 48

    (15) bloque -> LLAVIZQ multiples_estatutos LLAVDER .

    $end            reduce using rule 15 (bloque -> LLAVIZQ multiples_estatutos LLAVDER .)
    FUNC            reduce using rule 15 (bloque -> LLAVIZQ multiples_estatutos LLAVDER .)
    MAIN            reduce using rule 15 (bloque -> LLAVIZQ multiples_estatutos LLAVDER .)
    PUNCOM          reduce using rule 15 (bloque -> LLAVIZQ multiples_estatutos LLAVDER .)
    ELSE            reduce using rule 15 (bloque -> LLAVIZQ multiples_estatutos LLAVDER .)


state 49

    (19) multiples_estatutos -> estatuto multiples_estatutos .

    LLAVDER         reduce using rule 19 (multiples_estatutos -> estatuto multiples_estatutos .)


state 50

    (21) asignacion -> ID IGUAL . expresion PUNCOM
    (32) expresion -> . expresion AND expresion
    (33) expresion -> . expresion OR expresion
    (34) expresion -> . exp
    (35) expresion -> . exp MAYOR exp
    (36) expresion -> . exp MENOR exp
    (37) expresion -> . exp DIFF exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    expresion                      shift and go to state 56
    exp                            shift and go to state 57
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 51

    (27) condicion -> IF PARIZQ . expresion PARDER bloque PUNCOM
    (28) condicion -> IF PARIZQ . expresion PARDER bloque else_condicion PUNCOM
    (32) expresion -> . expresion AND expresion
    (33) expresion -> . expresion OR expresion
    (34) expresion -> . exp
    (35) expresion -> . exp MAYOR exp
    (36) expresion -> . exp MENOR exp
    (37) expresion -> . exp DIFF exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    expresion                      shift and go to state 68
    exp                            shift and go to state 57
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 52

    (22) escritura -> PRINT PARIZQ . print_expresion PARDER PUNCOM
    (23) print_expresion -> . expresion multiples_print
    (24) print_expresion -> . CTESTRING multiples_print
    (32) expresion -> . expresion AND expresion
    (33) expresion -> . expresion OR expresion
    (34) expresion -> . exp
    (35) expresion -> . exp MAYOR exp
    (36) expresion -> . exp MENOR exp
    (37) expresion -> . exp DIFF exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    CTESTRING       shift and go to state 71
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    print_expresion                shift and go to state 69
    expresion                      shift and go to state 70
    exp                            shift and go to state 57
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 53

    (2) funcion -> FUNC TIPO ID PARIZQ TIPO ID PARDER . vars bloque
    (6) vars -> . VAR id DOSPUN TIPO PUNCOM asignacion_id

    VAR             shift and go to state 6

    vars                           shift and go to state 72

state 54

    (10) asignacion_id -> id DOSPUN TIPO . PUNCOM asignacion_id

    PUNCOM          shift and go to state 73


state 55

    (51) var_cte -> ID .

    POR             reduce using rule 51 (var_cte -> ID .)
    DIV             reduce using rule 51 (var_cte -> ID .)
    MAS             reduce using rule 51 (var_cte -> ID .)
    MENOS           reduce using rule 51 (var_cte -> ID .)
    MAYOR           reduce using rule 51 (var_cte -> ID .)
    MENOR           reduce using rule 51 (var_cte -> ID .)
    DIFF            reduce using rule 51 (var_cte -> ID .)
    PUNCOM          reduce using rule 51 (var_cte -> ID .)
    AND             reduce using rule 51 (var_cte -> ID .)
    OR              reduce using rule 51 (var_cte -> ID .)
    PARDER          reduce using rule 51 (var_cte -> ID .)
    COMA            reduce using rule 51 (var_cte -> ID .)


state 56

    (21) asignacion -> ID IGUAL expresion . PUNCOM
    (32) expresion -> expresion . AND expresion
    (33) expresion -> expresion . OR expresion

    PUNCOM          shift and go to state 74
    AND             shift and go to state 75
    OR              shift and go to state 76


state 57

    (34) expresion -> exp .
    (35) expresion -> exp . MAYOR exp
    (36) expresion -> exp . MENOR exp
    (37) expresion -> exp . DIFF exp

    PUNCOM          reduce using rule 34 (expresion -> exp .)
    AND             reduce using rule 34 (expresion -> exp .)
    OR              reduce using rule 34 (expresion -> exp .)
    PARDER          reduce using rule 34 (expresion -> exp .)
    COMA            reduce using rule 34 (expresion -> exp .)
    MAYOR           shift and go to state 77
    MENOR           shift and go to state 78
    DIFF            shift and go to state 79


state 58

    (38) exp -> termino . exp_operacion
    (39) exp_operacion -> . MAS termino exp_operacion
    (40) exp_operacion -> . MENOS termino exp_operacion
    (41) exp_operacion -> . empty
    (55) empty -> .

    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

    exp_operacion                  shift and go to state 80
    empty                          shift and go to state 83

state 59

    (42) termino -> factor . termino_operador
    (43) termino_operador -> . POR factor termino_operador
    (44) termino_operador -> . DIV factor termino_operador
    (45) termino_operador -> . empty
    (55) empty -> .

    POR             shift and go to state 85
    DIV             shift and go to state 86
    MAS             reduce using rule 55 (empty -> .)
    MENOS           reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

    termino_operador               shift and go to state 84
    empty                          shift and go to state 87

state 60

    (46) factor -> PARIZQ . expresion PARDER
    (32) expresion -> . expresion AND expresion
    (33) expresion -> . expresion OR expresion
    (34) expresion -> . exp
    (35) expresion -> . exp MAYOR exp
    (36) expresion -> . exp MENOR exp
    (37) expresion -> . exp DIFF exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    expresion                      shift and go to state 88
    exp                            shift and go to state 57
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 61

    (47) factor -> MAS . var_cte
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC

    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67

    var_cte                        shift and go to state 89

state 62

    (49) factor -> var_cte .

    POR             reduce using rule 49 (factor -> var_cte .)
    DIV             reduce using rule 49 (factor -> var_cte .)
    MAS             reduce using rule 49 (factor -> var_cte .)
    MENOS           reduce using rule 49 (factor -> var_cte .)
    MAYOR           reduce using rule 49 (factor -> var_cte .)
    MENOR           reduce using rule 49 (factor -> var_cte .)
    DIFF            reduce using rule 49 (factor -> var_cte .)
    PUNCOM          reduce using rule 49 (factor -> var_cte .)
    AND             reduce using rule 49 (factor -> var_cte .)
    OR              reduce using rule 49 (factor -> var_cte .)
    PARDER          reduce using rule 49 (factor -> var_cte .)
    COMA            reduce using rule 49 (factor -> var_cte .)


state 63

    (48) factor -> MENOS . var_cte
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC

    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67

    var_cte                        shift and go to state 90

state 64

    (50) factor -> empty .

    POR             reduce using rule 50 (factor -> empty .)
    DIV             reduce using rule 50 (factor -> empty .)
    MAS             reduce using rule 50 (factor -> empty .)
    MENOS           reduce using rule 50 (factor -> empty .)
    MAYOR           reduce using rule 50 (factor -> empty .)
    MENOR           reduce using rule 50 (factor -> empty .)
    DIFF            reduce using rule 50 (factor -> empty .)
    PUNCOM          reduce using rule 50 (factor -> empty .)
    AND             reduce using rule 50 (factor -> empty .)
    OR              reduce using rule 50 (factor -> empty .)
    PARDER          reduce using rule 50 (factor -> empty .)
    COMA            reduce using rule 50 (factor -> empty .)


state 65

    (52) var_cte -> CTEI .

    POR             reduce using rule 52 (var_cte -> CTEI .)
    DIV             reduce using rule 52 (var_cte -> CTEI .)
    MAS             reduce using rule 52 (var_cte -> CTEI .)
    MENOS           reduce using rule 52 (var_cte -> CTEI .)
    MAYOR           reduce using rule 52 (var_cte -> CTEI .)
    MENOR           reduce using rule 52 (var_cte -> CTEI .)
    DIFF            reduce using rule 52 (var_cte -> CTEI .)
    PUNCOM          reduce using rule 52 (var_cte -> CTEI .)
    AND             reduce using rule 52 (var_cte -> CTEI .)
    OR              reduce using rule 52 (var_cte -> CTEI .)
    PARDER          reduce using rule 52 (var_cte -> CTEI .)
    COMA            reduce using rule 52 (var_cte -> CTEI .)


state 66

    (53) var_cte -> CTEF .

    POR             reduce using rule 53 (var_cte -> CTEF .)
    DIV             reduce using rule 53 (var_cte -> CTEF .)
    MAS             reduce using rule 53 (var_cte -> CTEF .)
    MENOS           reduce using rule 53 (var_cte -> CTEF .)
    MAYOR           reduce using rule 53 (var_cte -> CTEF .)
    MENOR           reduce using rule 53 (var_cte -> CTEF .)
    DIFF            reduce using rule 53 (var_cte -> CTEF .)
    PUNCOM          reduce using rule 53 (var_cte -> CTEF .)
    AND             reduce using rule 53 (var_cte -> CTEF .)
    OR              reduce using rule 53 (var_cte -> CTEF .)
    PARDER          reduce using rule 53 (var_cte -> CTEF .)
    COMA            reduce using rule 53 (var_cte -> CTEF .)


state 67

    (54) var_cte -> CTEC .

    POR             reduce using rule 54 (var_cte -> CTEC .)
    DIV             reduce using rule 54 (var_cte -> CTEC .)
    MAS             reduce using rule 54 (var_cte -> CTEC .)
    MENOS           reduce using rule 54 (var_cte -> CTEC .)
    MAYOR           reduce using rule 54 (var_cte -> CTEC .)
    MENOR           reduce using rule 54 (var_cte -> CTEC .)
    DIFF            reduce using rule 54 (var_cte -> CTEC .)
    PUNCOM          reduce using rule 54 (var_cte -> CTEC .)
    AND             reduce using rule 54 (var_cte -> CTEC .)
    OR              reduce using rule 54 (var_cte -> CTEC .)
    PARDER          reduce using rule 54 (var_cte -> CTEC .)
    COMA            reduce using rule 54 (var_cte -> CTEC .)


state 68

    (27) condicion -> IF PARIZQ expresion . PARDER bloque PUNCOM
    (28) condicion -> IF PARIZQ expresion . PARDER bloque else_condicion PUNCOM
    (32) expresion -> expresion . AND expresion
    (33) expresion -> expresion . OR expresion

    PARDER          shift and go to state 91
    AND             shift and go to state 75
    OR              shift and go to state 76


state 69

    (22) escritura -> PRINT PARIZQ print_expresion . PARDER PUNCOM

    PARDER          shift and go to state 92


state 70

    (23) print_expresion -> expresion . multiples_print
    (32) expresion -> expresion . AND expresion
    (33) expresion -> expresion . OR expresion
    (25) multiples_print -> . COMA print_expresion
    (26) multiples_print -> . empty
    (55) empty -> .

    AND             shift and go to state 75
    OR              shift and go to state 76
    COMA            shift and go to state 94
    PARDER          reduce using rule 55 (empty -> .)

    multiples_print                shift and go to state 93
    empty                          shift and go to state 95

state 71

    (24) print_expresion -> CTESTRING . multiples_print
    (25) multiples_print -> . COMA print_expresion
    (26) multiples_print -> . empty
    (55) empty -> .

    COMA            shift and go to state 94
    PARDER          reduce using rule 55 (empty -> .)

    multiples_print                shift and go to state 96
    empty                          shift and go to state 95

state 72

    (2) funcion -> FUNC TIPO ID PARIZQ TIPO ID PARDER vars . bloque
    (15) bloque -> . LLAVIZQ multiples_estatutos LLAVDER

    LLAVIZQ         shift and go to state 32

    bloque                         shift and go to state 97

state 73

    (10) asignacion_id -> id DOSPUN TIPO PUNCOM . asignacion_id
    (10) asignacion_id -> . id DOSPUN TIPO PUNCOM asignacion_id
    (11) asignacion_id -> . empty
    (7) id -> . ID acum_id
    (55) empty -> .

    ID              shift and go to state 12
    FUNC            reduce using rule 55 (empty -> .)
    MAIN            reduce using rule 55 (empty -> .)
    LLAVIZQ         reduce using rule 55 (empty -> .)

    id                             shift and go to state 34
    asignacion_id                  shift and go to state 98
    empty                          shift and go to state 36

state 74

    (21) asignacion -> ID IGUAL expresion PUNCOM .

    ID              reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)
    IF              reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)
    PRINT           reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)
    LLAVDER         reduce using rule 21 (asignacion -> ID IGUAL expresion PUNCOM .)


state 75

    (32) expresion -> expresion AND . expresion
    (32) expresion -> . expresion AND expresion
    (33) expresion -> . expresion OR expresion
    (34) expresion -> . exp
    (35) expresion -> . exp MAYOR exp
    (36) expresion -> . exp MENOR exp
    (37) expresion -> . exp DIFF exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    expresion                      shift and go to state 99
    exp                            shift and go to state 57
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 76

    (33) expresion -> expresion OR . expresion
    (32) expresion -> . expresion AND expresion
    (33) expresion -> . expresion OR expresion
    (34) expresion -> . exp
    (35) expresion -> . exp MAYOR exp
    (36) expresion -> . exp MENOR exp
    (37) expresion -> . exp DIFF exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    expresion                      shift and go to state 100
    exp                            shift and go to state 57
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 77

    (35) expresion -> exp MAYOR . exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    exp                            shift and go to state 101
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 78

    (36) expresion -> exp MENOR . exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    exp                            shift and go to state 102
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 79

    (37) expresion -> exp DIFF . exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    exp                            shift and go to state 103
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 80

    (38) exp -> termino exp_operacion .

    MAYOR           reduce using rule 38 (exp -> termino exp_operacion .)
    MENOR           reduce using rule 38 (exp -> termino exp_operacion .)
    DIFF            reduce using rule 38 (exp -> termino exp_operacion .)
    PUNCOM          reduce using rule 38 (exp -> termino exp_operacion .)
    AND             reduce using rule 38 (exp -> termino exp_operacion .)
    OR              reduce using rule 38 (exp -> termino exp_operacion .)
    PARDER          reduce using rule 38 (exp -> termino exp_operacion .)
    COMA            reduce using rule 38 (exp -> termino exp_operacion .)


state 81

    (39) exp_operacion -> MAS . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    termino                        shift and go to state 104
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 82

    (40) exp_operacion -> MENOS . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    termino                        shift and go to state 105
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 83

    (41) exp_operacion -> empty .

    MAYOR           reduce using rule 41 (exp_operacion -> empty .)
    MENOR           reduce using rule 41 (exp_operacion -> empty .)
    DIFF            reduce using rule 41 (exp_operacion -> empty .)
    PUNCOM          reduce using rule 41 (exp_operacion -> empty .)
    AND             reduce using rule 41 (exp_operacion -> empty .)
    OR              reduce using rule 41 (exp_operacion -> empty .)
    PARDER          reduce using rule 41 (exp_operacion -> empty .)
    COMA            reduce using rule 41 (exp_operacion -> empty .)


state 84

    (42) termino -> factor termino_operador .

    MAS             reduce using rule 42 (termino -> factor termino_operador .)
    MENOS           reduce using rule 42 (termino -> factor termino_operador .)
    MAYOR           reduce using rule 42 (termino -> factor termino_operador .)
    MENOR           reduce using rule 42 (termino -> factor termino_operador .)
    DIFF            reduce using rule 42 (termino -> factor termino_operador .)
    PUNCOM          reduce using rule 42 (termino -> factor termino_operador .)
    AND             reduce using rule 42 (termino -> factor termino_operador .)
    OR              reduce using rule 42 (termino -> factor termino_operador .)
    PARDER          reduce using rule 42 (termino -> factor termino_operador .)
    COMA            reduce using rule 42 (termino -> factor termino_operador .)


state 85

    (43) termino_operador -> POR . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    factor                         shift and go to state 106
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 86

    (44) termino_operador -> DIV . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    factor                         shift and go to state 107
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 87

    (45) termino_operador -> empty .

    MAS             reduce using rule 45 (termino_operador -> empty .)
    MENOS           reduce using rule 45 (termino_operador -> empty .)
    MAYOR           reduce using rule 45 (termino_operador -> empty .)
    MENOR           reduce using rule 45 (termino_operador -> empty .)
    DIFF            reduce using rule 45 (termino_operador -> empty .)
    PUNCOM          reduce using rule 45 (termino_operador -> empty .)
    AND             reduce using rule 45 (termino_operador -> empty .)
    OR              reduce using rule 45 (termino_operador -> empty .)
    PARDER          reduce using rule 45 (termino_operador -> empty .)
    COMA            reduce using rule 45 (termino_operador -> empty .)


state 88

    (46) factor -> PARIZQ expresion . PARDER
    (32) expresion -> expresion . AND expresion
    (33) expresion -> expresion . OR expresion

    PARDER          shift and go to state 108
    AND             shift and go to state 75
    OR              shift and go to state 76


state 89

    (47) factor -> MAS var_cte .

    POR             reduce using rule 47 (factor -> MAS var_cte .)
    DIV             reduce using rule 47 (factor -> MAS var_cte .)
    MAS             reduce using rule 47 (factor -> MAS var_cte .)
    MENOS           reduce using rule 47 (factor -> MAS var_cte .)
    MAYOR           reduce using rule 47 (factor -> MAS var_cte .)
    MENOR           reduce using rule 47 (factor -> MAS var_cte .)
    DIFF            reduce using rule 47 (factor -> MAS var_cte .)
    PUNCOM          reduce using rule 47 (factor -> MAS var_cte .)
    AND             reduce using rule 47 (factor -> MAS var_cte .)
    OR              reduce using rule 47 (factor -> MAS var_cte .)
    PARDER          reduce using rule 47 (factor -> MAS var_cte .)
    COMA            reduce using rule 47 (factor -> MAS var_cte .)


state 90

    (48) factor -> MENOS var_cte .

    POR             reduce using rule 48 (factor -> MENOS var_cte .)
    DIV             reduce using rule 48 (factor -> MENOS var_cte .)
    MAS             reduce using rule 48 (factor -> MENOS var_cte .)
    MENOS           reduce using rule 48 (factor -> MENOS var_cte .)
    MAYOR           reduce using rule 48 (factor -> MENOS var_cte .)
    MENOR           reduce using rule 48 (factor -> MENOS var_cte .)
    DIFF            reduce using rule 48 (factor -> MENOS var_cte .)
    PUNCOM          reduce using rule 48 (factor -> MENOS var_cte .)
    AND             reduce using rule 48 (factor -> MENOS var_cte .)
    OR              reduce using rule 48 (factor -> MENOS var_cte .)
    PARDER          reduce using rule 48 (factor -> MENOS var_cte .)
    COMA            reduce using rule 48 (factor -> MENOS var_cte .)


state 91

    (27) condicion -> IF PARIZQ expresion PARDER . bloque PUNCOM
    (28) condicion -> IF PARIZQ expresion PARDER . bloque else_condicion PUNCOM
    (15) bloque -> . LLAVIZQ multiples_estatutos LLAVDER

    LLAVIZQ         shift and go to state 32

    bloque                         shift and go to state 109

state 92

    (22) escritura -> PRINT PARIZQ print_expresion PARDER . PUNCOM

    PUNCOM          shift and go to state 110


state 93

    (23) print_expresion -> expresion multiples_print .

    PARDER          reduce using rule 23 (print_expresion -> expresion multiples_print .)


state 94

    (25) multiples_print -> COMA . print_expresion
    (23) print_expresion -> . expresion multiples_print
    (24) print_expresion -> . CTESTRING multiples_print
    (32) expresion -> . expresion AND expresion
    (33) expresion -> . expresion OR expresion
    (34) expresion -> . exp
    (35) expresion -> . exp MAYOR exp
    (36) expresion -> . exp MENOR exp
    (37) expresion -> . exp DIFF exp
    (38) exp -> . termino exp_operacion
    (42) termino -> . factor termino_operador
    (46) factor -> . PARIZQ expresion PARDER
    (47) factor -> . MAS var_cte
    (48) factor -> . MENOS var_cte
    (49) factor -> . var_cte
    (50) factor -> . empty
    (51) var_cte -> . ID
    (52) var_cte -> . CTEI
    (53) var_cte -> . CTEF
    (54) var_cte -> . CTEC
    (55) empty -> .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    CTESTRING       shift and go to state 71
    PARIZQ          shift and go to state 60
    MAS             shift and go to state 61
    MENOS           shift and go to state 63
    ID              shift and go to state 55
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66
    CTEC            shift and go to state 67
    POR             reduce using rule 55 (empty -> .)
    DIV             reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)

  ! MAS             [ reduce using rule 55 (empty -> .) ]
  ! MENOS           [ reduce using rule 55 (empty -> .) ]

    print_expresion                shift and go to state 111
    expresion                      shift and go to state 70
    exp                            shift and go to state 57
    termino                        shift and go to state 58
    factor                         shift and go to state 59
    var_cte                        shift and go to state 62
    empty                          shift and go to state 64

state 95

    (26) multiples_print -> empty .

    PARDER          reduce using rule 26 (multiples_print -> empty .)


state 96

    (24) print_expresion -> CTESTRING multiples_print .

    PARDER          reduce using rule 24 (print_expresion -> CTESTRING multiples_print .)


state 97

    (2) funcion -> FUNC TIPO ID PARIZQ TIPO ID PARDER vars bloque .

    FUNC            reduce using rule 2 (funcion -> FUNC TIPO ID PARIZQ TIPO ID PARDER vars bloque .)
    MAIN            reduce using rule 2 (funcion -> FUNC TIPO ID PARIZQ TIPO ID PARDER vars bloque .)


state 98

    (10) asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id .

    FUNC            reduce using rule 10 (asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id .)
    MAIN            reduce using rule 10 (asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id .)
    LLAVIZQ         reduce using rule 10 (asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id .)


state 99

    (32) expresion -> expresion AND expresion .
    (32) expresion -> expresion . AND expresion
    (33) expresion -> expresion . OR expresion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNCOM          reduce using rule 32 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 32 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 32 (expresion -> expresion AND expresion .)
    AND             shift and go to state 75
    OR              shift and go to state 76

  ! AND             [ reduce using rule 32 (expresion -> expresion AND expresion .) ]
  ! OR              [ reduce using rule 32 (expresion -> expresion AND expresion .) ]


state 100

    (33) expresion -> expresion OR expresion .
    (32) expresion -> expresion . AND expresion
    (33) expresion -> expresion . OR expresion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNCOM          reduce using rule 33 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 33 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 33 (expresion -> expresion OR expresion .)
    AND             shift and go to state 75
    OR              shift and go to state 76

  ! AND             [ reduce using rule 33 (expresion -> expresion OR expresion .) ]
  ! OR              [ reduce using rule 33 (expresion -> expresion OR expresion .) ]


state 101

    (35) expresion -> exp MAYOR exp .

    PUNCOM          reduce using rule 35 (expresion -> exp MAYOR exp .)
    AND             reduce using rule 35 (expresion -> exp MAYOR exp .)
    OR              reduce using rule 35 (expresion -> exp MAYOR exp .)
    PARDER          reduce using rule 35 (expresion -> exp MAYOR exp .)
    COMA            reduce using rule 35 (expresion -> exp MAYOR exp .)


state 102

    (36) expresion -> exp MENOR exp .

    PUNCOM          reduce using rule 36 (expresion -> exp MENOR exp .)
    AND             reduce using rule 36 (expresion -> exp MENOR exp .)
    OR              reduce using rule 36 (expresion -> exp MENOR exp .)
    PARDER          reduce using rule 36 (expresion -> exp MENOR exp .)
    COMA            reduce using rule 36 (expresion -> exp MENOR exp .)


state 103

    (37) expresion -> exp DIFF exp .

    PUNCOM          reduce using rule 37 (expresion -> exp DIFF exp .)
    AND             reduce using rule 37 (expresion -> exp DIFF exp .)
    OR              reduce using rule 37 (expresion -> exp DIFF exp .)
    PARDER          reduce using rule 37 (expresion -> exp DIFF exp .)
    COMA            reduce using rule 37 (expresion -> exp DIFF exp .)


state 104

    (39) exp_operacion -> MAS termino . exp_operacion
    (39) exp_operacion -> . MAS termino exp_operacion
    (40) exp_operacion -> . MENOS termino exp_operacion
    (41) exp_operacion -> . empty
    (55) empty -> .

    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

    exp_operacion                  shift and go to state 112
    empty                          shift and go to state 83

state 105

    (40) exp_operacion -> MENOS termino . exp_operacion
    (39) exp_operacion -> . MAS termino exp_operacion
    (40) exp_operacion -> . MENOS termino exp_operacion
    (41) exp_operacion -> . empty
    (55) empty -> .

    MAS             shift and go to state 81
    MENOS           shift and go to state 82
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

    exp_operacion                  shift and go to state 113
    empty                          shift and go to state 83

state 106

    (43) termino_operador -> POR factor . termino_operador
    (43) termino_operador -> . POR factor termino_operador
    (44) termino_operador -> . DIV factor termino_operador
    (45) termino_operador -> . empty
    (55) empty -> .

    POR             shift and go to state 85
    DIV             shift and go to state 86
    MAS             reduce using rule 55 (empty -> .)
    MENOS           reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

    termino_operador               shift and go to state 114
    empty                          shift and go to state 87

state 107

    (44) termino_operador -> DIV factor . termino_operador
    (43) termino_operador -> . POR factor termino_operador
    (44) termino_operador -> . DIV factor termino_operador
    (45) termino_operador -> . empty
    (55) empty -> .

    POR             shift and go to state 85
    DIV             shift and go to state 86
    MAS             reduce using rule 55 (empty -> .)
    MENOS           reduce using rule 55 (empty -> .)
    MAYOR           reduce using rule 55 (empty -> .)
    MENOR           reduce using rule 55 (empty -> .)
    DIFF            reduce using rule 55 (empty -> .)
    PUNCOM          reduce using rule 55 (empty -> .)
    AND             reduce using rule 55 (empty -> .)
    OR              reduce using rule 55 (empty -> .)
    PARDER          reduce using rule 55 (empty -> .)
    COMA            reduce using rule 55 (empty -> .)

    termino_operador               shift and go to state 115
    empty                          shift and go to state 87

state 108

    (46) factor -> PARIZQ expresion PARDER .

    POR             reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    DIFF            reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    PUNCOM          reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    AND             reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    OR              reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 46 (factor -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 46 (factor -> PARIZQ expresion PARDER .)


state 109

    (27) condicion -> IF PARIZQ expresion PARDER bloque . PUNCOM
    (28) condicion -> IF PARIZQ expresion PARDER bloque . else_condicion PUNCOM
    (29) else_condicion -> . ELSE bloque

    PUNCOM          shift and go to state 116
    ELSE            shift and go to state 118

    else_condicion                 shift and go to state 117

state 110

    (22) escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .

    ID              reduce using rule 22 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)
    IF              reduce using rule 22 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)
    PRINT           reduce using rule 22 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)
    LLAVDER         reduce using rule 22 (escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM .)


state 111

    (25) multiples_print -> COMA print_expresion .

    PARDER          reduce using rule 25 (multiples_print -> COMA print_expresion .)


state 112

    (39) exp_operacion -> MAS termino exp_operacion .

    MAYOR           reduce using rule 39 (exp_operacion -> MAS termino exp_operacion .)
    MENOR           reduce using rule 39 (exp_operacion -> MAS termino exp_operacion .)
    DIFF            reduce using rule 39 (exp_operacion -> MAS termino exp_operacion .)
    PUNCOM          reduce using rule 39 (exp_operacion -> MAS termino exp_operacion .)
    AND             reduce using rule 39 (exp_operacion -> MAS termino exp_operacion .)
    OR              reduce using rule 39 (exp_operacion -> MAS termino exp_operacion .)
    PARDER          reduce using rule 39 (exp_operacion -> MAS termino exp_operacion .)
    COMA            reduce using rule 39 (exp_operacion -> MAS termino exp_operacion .)


state 113

    (40) exp_operacion -> MENOS termino exp_operacion .

    MAYOR           reduce using rule 40 (exp_operacion -> MENOS termino exp_operacion .)
    MENOR           reduce using rule 40 (exp_operacion -> MENOS termino exp_operacion .)
    DIFF            reduce using rule 40 (exp_operacion -> MENOS termino exp_operacion .)
    PUNCOM          reduce using rule 40 (exp_operacion -> MENOS termino exp_operacion .)
    AND             reduce using rule 40 (exp_operacion -> MENOS termino exp_operacion .)
    OR              reduce using rule 40 (exp_operacion -> MENOS termino exp_operacion .)
    PARDER          reduce using rule 40 (exp_operacion -> MENOS termino exp_operacion .)
    COMA            reduce using rule 40 (exp_operacion -> MENOS termino exp_operacion .)


state 114

    (43) termino_operador -> POR factor termino_operador .

    MAS             reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    MENOS           reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    MAYOR           reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    MENOR           reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    DIFF            reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    PUNCOM          reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    AND             reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    OR              reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    PARDER          reduce using rule 43 (termino_operador -> POR factor termino_operador .)
    COMA            reduce using rule 43 (termino_operador -> POR factor termino_operador .)


state 115

    (44) termino_operador -> DIV factor termino_operador .

    MAS             reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    MENOS           reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    MAYOR           reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    MENOR           reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    DIFF            reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    PUNCOM          reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    AND             reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    OR              reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    PARDER          reduce using rule 44 (termino_operador -> DIV factor termino_operador .)
    COMA            reduce using rule 44 (termino_operador -> DIV factor termino_operador .)


state 116

    (27) condicion -> IF PARIZQ expresion PARDER bloque PUNCOM .

    ID              reduce using rule 27 (condicion -> IF PARIZQ expresion PARDER bloque PUNCOM .)
    IF              reduce using rule 27 (condicion -> IF PARIZQ expresion PARDER bloque PUNCOM .)
    PRINT           reduce using rule 27 (condicion -> IF PARIZQ expresion PARDER bloque PUNCOM .)
    LLAVDER         reduce using rule 27 (condicion -> IF PARIZQ expresion PARDER bloque PUNCOM .)


state 117

    (28) condicion -> IF PARIZQ expresion PARDER bloque else_condicion . PUNCOM

    PUNCOM          shift and go to state 119


state 118

    (29) else_condicion -> ELSE . bloque
    (15) bloque -> . LLAVIZQ multiples_estatutos LLAVDER

    LLAVIZQ         shift and go to state 32

    bloque                         shift and go to state 120

state 119

    (28) condicion -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .

    ID              reduce using rule 28 (condicion -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)
    IF              reduce using rule 28 (condicion -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)
    PRINT           reduce using rule 28 (condicion -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)
    LLAVDER         reduce using rule 28 (condicion -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM .)


state 120

    (29) else_condicion -> ELSE bloque .

    PUNCOM          reduce using rule 29 (else_condicion -> ELSE bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 8 resolved as shift
WARNING: shift/reduce conflict for MAS in state 50 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 50 resolved as shift
WARNING: shift/reduce conflict for MAS in state 51 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 51 resolved as shift
WARNING: shift/reduce conflict for MAS in state 52 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 52 resolved as shift
WARNING: shift/reduce conflict for MAS in state 60 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 60 resolved as shift
WARNING: shift/reduce conflict for MAS in state 75 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 75 resolved as shift
WARNING: shift/reduce conflict for MAS in state 76 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 76 resolved as shift
WARNING: shift/reduce conflict for MAS in state 77 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 77 resolved as shift
WARNING: shift/reduce conflict for MAS in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for MAS in state 79 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 79 resolved as shift
WARNING: shift/reduce conflict for MAS in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 81 resolved as shift
WARNING: shift/reduce conflict for MAS in state 82 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 82 resolved as shift
WARNING: shift/reduce conflict for MAS in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 85 resolved as shift
WARNING: shift/reduce conflict for MAS in state 86 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 86 resolved as shift
WARNING: shift/reduce conflict for MAS in state 94 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (funcion -> empty)
WARNING: rejected rule (acum_func -> empty) in state 9
WARNING: Rule (acum_func -> empty) is never reduced
