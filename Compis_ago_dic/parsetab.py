
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARR CHAR COMA CORCHDER CORCHIZQ CTEC CTEF CTEI CTESTRING DIFF DIV DO DOSPUN ELSE FLOAT FOR FUNC ID IF IGUAL INT LLAVDER LLAVIZQ MAIN MAS MAYOR MENOR MENOS MOD OR PARDER PARIZQ POR PRINT PROGRAM PUNCOM RETURN TO VAR VOID WHILEprogram : PROGRAM ID PUNCOM vars acum_func MAIN PARIZQ PARDER bloquefuncion : FUNC TIPO ID PARIZQ TIPO ID PARDER vars bloque\n                 | emptyacum_func : funcion acum_func\n                  | emptyvars : VAR id DOSPUN TIPO PUNCOM asignacion_idid : ID acum_idacum_id : COMA ID acum_id\n                | emptyasignacion_id : id DOSPUN TIPO PUNCOM asignacion_id\n                  | emptyTIPO : INT\n            | FLOAT\n            | CHARbloque : LLAVIZQ multiples_estatutos LLAVDERestatuto : asignacion\n                 | condicion\n                 | escrituramultiples_estatutos : estatuto multiples_estatutos\n                       | emptyasignacion : ID IGUAL expresion PUNCOMescritura : PRINT PARIZQ print_expresion PARDER PUNCOMprint_expresion : expresion multiples_print\n                       | CTESTRING multiples_printmultiples_print : COMA  print_expresion\n                 | emptycondicion : IF PARIZQ expresion PARDER bloque PUNCOM\n                 | IF PARIZQ expresion PARDER bloque else_condicion PUNCOMelse_condicion : ELSE bloque while_condicion : WHILE PARIZQ expresion PARDER DO bloquefor_condicion : FOR asignacion TO expresion DO bloqueexpresion : expresion AND expresionexpresion : expresion OR expresionexpresion : exp \n                 | exp MAYOR exp\n                 | exp MENOR exp\n                 | exp DIFF expexp : termino exp_operacionexp_operacion : MAS termino exp_operacion\n                     | MENOS termino exp_operacion\n                     | emptytermino : factor termino_operadortermino_operador : POR factor termino_operador\n                        | DIV factor termino_operador\n                        | emptyfactor : PARIZQ expresion PARDER\n              | MAS var_cte\n              | MENOS var_cte\n              | var_cte\n              | emptyvar_cte : ID\n               | CTEI\n               | CTEF\n               | CTECempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,48,],[0,-1,-15,]),'ID':([2,6,15,16,17,18,21,29,32,33,38,40,41,42,50,51,52,60,61,63,73,74,75,76,77,78,79,81,82,85,86,94,110,116,119,],[3,12,24,-12,-13,-14,26,12,43,46,43,-16,-17,-18,55,55,55,55,55,55,12,-21,55,55,55,55,55,55,55,55,55,55,-22,-27,-28,]),'PUNCOM':([3,16,17,18,25,48,50,54,55,56,57,58,59,62,64,65,66,67,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,92,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,120,],[4,-12,-13,-14,29,-15,-55,73,-51,74,-34,-55,-55,-49,-50,-52,-53,-54,-55,-55,-55,-55,-55,-38,-55,-55,-41,-42,-55,-55,-45,-47,-48,110,-32,-33,-35,-36,-37,-55,-55,-55,-55,-46,116,-39,-40,-43,-44,119,-29,]),'VAR':([4,53,],[6,6,]),'FUNC':([5,8,9,29,35,36,48,73,97,98,],[10,10,-3,-55,-6,-11,-15,-55,-2,-10,]),'MAIN':([5,7,8,9,14,29,35,36,48,73,97,98,],[-55,13,-55,-3,-4,-55,-6,-11,-15,-55,-2,-10,]),'INT':([10,19,28,47,],[16,16,16,16,]),'FLOAT':([10,19,28,47,],[17,17,17,17,]),'CHAR':([10,19,28,47,],[18,18,18,18,]),'DOSPUN':([11,12,20,22,26,30,34,],[19,-55,-7,-9,-55,-8,47,]),'COMA':([12,26,52,55,57,58,59,62,64,65,66,67,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,94,99,100,101,102,103,104,105,106,107,108,112,113,114,115,],[21,21,-55,-51,-34,-55,-55,-49,-50,-52,-53,-54,94,94,-55,-55,-55,-55,-55,-38,-55,-55,-41,-42,-55,-55,-45,-47,-48,-55,-32,-33,-35,-36,-37,-55,-55,-55,-55,-46,-39,-40,-43,-44,]),'PARIZQ':([13,24,44,45,50,51,52,60,75,76,77,78,79,81,82,85,86,94,],[23,28,51,52,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'PARDER':([23,46,51,52,55,57,58,59,60,62,64,65,66,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,95,96,99,100,101,102,103,104,105,106,107,108,111,112,113,114,115,],[27,53,-55,-55,-51,-34,-55,-55,-55,-49,-50,-52,-53,-54,91,92,-55,-55,-55,-55,-55,-55,-55,-38,-55,-55,-41,-42,-55,-55,-45,108,-47,-48,-23,-55,-26,-24,-32,-33,-35,-36,-37,-55,-55,-55,-55,-46,-25,-39,-40,-43,-44,]),'LLAVIZQ':([27,29,35,36,72,73,91,98,118,],[32,-55,-6,-11,32,-55,32,-10,32,]),'LLAVDER':([32,37,38,39,40,41,42,49,74,110,116,119,],[-55,48,-55,-20,-16,-17,-18,-19,-21,-22,-27,-28,]),'IF':([32,38,40,41,42,74,110,116,119,],[44,44,-16,-17,-18,-21,-22,-27,-28,]),'PRINT':([32,38,40,41,42,74,110,116,119,],[45,45,-16,-17,-18,-21,-22,-27,-28,]),'IGUAL':([43,],[50,]),'ELSE':([48,109,],[-15,118,]),'MAS':([50,51,52,55,58,59,60,62,64,65,66,67,75,76,77,78,79,81,82,84,85,86,87,89,90,94,104,105,106,107,108,114,115,],[61,61,61,-51,81,-55,61,-49,-50,-52,-53,-54,61,61,61,61,61,61,61,-42,61,61,-45,-47,-48,61,81,81,-55,-55,-46,-43,-44,]),'MENOS':([50,51,52,55,58,59,60,62,64,65,66,67,75,76,77,78,79,81,82,84,85,86,87,89,90,94,104,105,106,107,108,114,115,],[63,63,63,-51,82,-55,63,-49,-50,-52,-53,-54,63,63,63,63,63,63,63,-42,63,63,-45,-47,-48,63,82,82,-55,-55,-46,-43,-44,]),'CTEI':([50,51,52,60,61,63,75,76,77,78,79,81,82,85,86,94,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'CTEF':([50,51,52,60,61,63,75,76,77,78,79,81,82,85,86,94,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'CTEC':([50,51,52,60,61,63,75,76,77,78,79,81,82,85,86,94,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'POR':([50,51,52,55,59,60,62,64,65,66,67,75,76,77,78,79,81,82,85,86,89,90,94,106,107,108,],[-55,-55,-55,-51,85,-55,-49,-50,-52,-53,-54,-55,-55,-55,-55,-55,-55,-55,-55,-55,-47,-48,-55,85,85,-46,]),'DIV':([50,51,52,55,59,60,62,64,65,66,67,75,76,77,78,79,81,82,85,86,89,90,94,106,107,108,],[-55,-55,-55,-51,86,-55,-49,-50,-52,-53,-54,-55,-55,-55,-55,-55,-55,-55,-55,-55,-47,-48,-55,86,86,-46,]),'MAYOR':([50,51,52,55,57,58,59,60,62,64,65,66,67,75,76,80,81,82,83,84,85,86,87,89,90,94,104,105,106,107,108,112,113,114,115,],[-55,-55,-55,-51,77,-55,-55,-55,-49,-50,-52,-53,-54,-55,-55,-38,-55,-55,-41,-42,-55,-55,-45,-47,-48,-55,-55,-55,-55,-55,-46,-39,-40,-43,-44,]),'MENOR':([50,51,52,55,57,58,59,60,62,64,65,66,67,75,76,80,81,82,83,84,85,86,87,89,90,94,104,105,106,107,108,112,113,114,115,],[-55,-55,-55,-51,78,-55,-55,-55,-49,-50,-52,-53,-54,-55,-55,-38,-55,-55,-41,-42,-55,-55,-45,-47,-48,-55,-55,-55,-55,-55,-46,-39,-40,-43,-44,]),'DIFF':([50,51,52,55,57,58,59,60,62,64,65,66,67,75,76,80,81,82,83,84,85,86,87,89,90,94,104,105,106,107,108,112,113,114,115,],[-55,-55,-55,-51,79,-55,-55,-55,-49,-50,-52,-53,-54,-55,-55,-38,-55,-55,-41,-42,-55,-55,-45,-47,-48,-55,-55,-55,-55,-55,-46,-39,-40,-43,-44,]),'AND':([50,51,52,55,56,57,58,59,60,62,64,65,66,67,68,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,99,100,101,102,103,104,105,106,107,108,112,113,114,115,],[-55,-55,-55,-51,75,-34,-55,-55,-55,-49,-50,-52,-53,-54,75,75,-55,-55,-55,-55,-55,-38,-55,-55,-41,-42,-55,-55,-45,75,-47,-48,-55,75,75,-35,-36,-37,-55,-55,-55,-55,-46,-39,-40,-43,-44,]),'OR':([50,51,52,55,56,57,58,59,60,62,64,65,66,67,68,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,99,100,101,102,103,104,105,106,107,108,112,113,114,115,],[-55,-55,-55,-51,76,-34,-55,-55,-55,-49,-50,-52,-53,-54,76,76,-55,-55,-55,-55,-55,-38,-55,-55,-41,-42,-55,-55,-45,76,-47,-48,-55,76,76,-35,-36,-37,-55,-55,-55,-55,-46,-39,-40,-43,-44,]),'CTESTRING':([52,94,],[71,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,53,],[5,72,]),'acum_func':([5,8,],[7,14,]),'funcion':([5,8,],[8,8,]),'empty':([5,8,12,26,29,32,38,50,51,52,58,59,60,70,71,73,75,76,77,78,79,81,82,85,86,94,104,105,106,107,],[9,9,22,22,36,39,39,64,64,64,83,87,64,95,95,36,64,64,64,64,64,64,64,64,64,64,83,83,87,87,]),'id':([6,29,73,],[11,34,34,]),'TIPO':([10,19,28,47,],[15,25,33,54,]),'acum_id':([12,26,],[20,30,]),'bloque':([27,72,91,118,],[31,97,109,120,]),'asignacion_id':([29,73,],[35,98,]),'multiples_estatutos':([32,38,],[37,49,]),'estatuto':([32,38,],[38,38,]),'asignacion':([32,38,],[40,40,]),'condicion':([32,38,],[41,41,]),'escritura':([32,38,],[42,42,]),'expresion':([50,51,52,60,75,76,94,],[56,68,70,88,99,100,70,]),'exp':([50,51,52,60,75,76,77,78,79,94,],[57,57,57,57,57,57,101,102,103,57,]),'termino':([50,51,52,60,75,76,77,78,79,81,82,94,],[58,58,58,58,58,58,58,58,58,104,105,58,]),'factor':([50,51,52,60,75,76,77,78,79,81,82,85,86,94,],[59,59,59,59,59,59,59,59,59,59,59,106,107,59,]),'var_cte':([50,51,52,60,61,63,75,76,77,78,79,81,82,85,86,94,],[62,62,62,62,89,90,62,62,62,62,62,62,62,62,62,62,]),'print_expresion':([52,94,],[69,111,]),'exp_operacion':([58,104,105,],[80,112,113,]),'termino_operador':([59,106,107,],[84,114,115,]),'multiples_print':([70,71,],[93,96,]),'else_condicion':([109,],[117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID PUNCOM vars acum_func MAIN PARIZQ PARDER bloque','program',9,'p_program','parser_1.py',6),
  ('funcion -> FUNC TIPO ID PARIZQ TIPO ID PARDER vars bloque','funcion',9,'p_funcion','parser_1.py',10),
  ('funcion -> empty','funcion',1,'p_funcion','parser_1.py',11),
  ('acum_func -> funcion acum_func','acum_func',2,'p_acum_func','parser_1.py',14),
  ('acum_func -> empty','acum_func',1,'p_acum_func','parser_1.py',15),
  ('vars -> VAR id DOSPUN TIPO PUNCOM asignacion_id','vars',6,'p_vars','parser_1.py',20),
  ('id -> ID acum_id','id',2,'p_id','parser_1.py',24),
  ('acum_id -> COMA ID acum_id','acum_id',3,'p_acum_id','parser_1.py',28),
  ('acum_id -> empty','acum_id',1,'p_acum_id','parser_1.py',29),
  ('asignacion_id -> id DOSPUN TIPO PUNCOM asignacion_id','asignacion_id',5,'p_asignacion_id','parser_1.py',32),
  ('asignacion_id -> empty','asignacion_id',1,'p_asignacion_id','parser_1.py',33),
  ('TIPO -> INT','TIPO',1,'p_TIPO','parser_1.py',38),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','parser_1.py',39),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','parser_1.py',40),
  ('bloque -> LLAVIZQ multiples_estatutos LLAVDER','bloque',3,'p_bloque','parser_1.py',45),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser_1.py',52),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser_1.py',53),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser_1.py',54),
  ('multiples_estatutos -> estatuto multiples_estatutos','multiples_estatutos',2,'p_multiples_estatutos','parser_1.py',58),
  ('multiples_estatutos -> empty','multiples_estatutos',1,'p_multiples_estatutos','parser_1.py',59),
  ('asignacion -> ID IGUAL expresion PUNCOM','asignacion',4,'p_asignacion','parser_1.py',65),
  ('escritura -> PRINT PARIZQ print_expresion PARDER PUNCOM','escritura',5,'p_escritura','parser_1.py',69),
  ('print_expresion -> expresion multiples_print','print_expresion',2,'p_print_expresion','parser_1.py',73),
  ('print_expresion -> CTESTRING multiples_print','print_expresion',2,'p_print_expresion','parser_1.py',74),
  ('multiples_print -> COMA print_expresion','multiples_print',2,'p_multiples_print','parser_1.py',78),
  ('multiples_print -> empty','multiples_print',1,'p_multiples_print','parser_1.py',79),
  ('condicion -> IF PARIZQ expresion PARDER bloque PUNCOM','condicion',6,'p_condicion','parser_1.py',83),
  ('condicion -> IF PARIZQ expresion PARDER bloque else_condicion PUNCOM','condicion',7,'p_condicion','parser_1.py',84),
  ('else_condicion -> ELSE bloque','else_condicion',2,'p_else_condicion','parser_1.py',88),
  ('while_condicion -> WHILE PARIZQ expresion PARDER DO bloque','while_condicion',6,'p_while_condicion','parser_1.py',92),
  ('for_condicion -> FOR asignacion TO expresion DO bloque','for_condicion',6,'p_for_condicion','parser_1.py',96),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_and','parser_1.py',100),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_or','parser_1.py',104),
  ('expresion -> exp','expresion',1,'p_expresion','parser_1.py',108),
  ('expresion -> exp MAYOR exp','expresion',3,'p_expresion','parser_1.py',109),
  ('expresion -> exp MENOR exp','expresion',3,'p_expresion','parser_1.py',110),
  ('expresion -> exp DIFF exp','expresion',3,'p_expresion','parser_1.py',111),
  ('exp -> termino exp_operacion','exp',2,'p_exp','parser_1.py',116),
  ('exp_operacion -> MAS termino exp_operacion','exp_operacion',3,'p_exp_operacion','parser_1.py',120),
  ('exp_operacion -> MENOS termino exp_operacion','exp_operacion',3,'p_exp_operacion','parser_1.py',121),
  ('exp_operacion -> empty','exp_operacion',1,'p_exp_operacion','parser_1.py',122),
  ('termino -> factor termino_operador','termino',2,'p_termino','parser_1.py',127),
  ('termino_operador -> POR factor termino_operador','termino_operador',3,'p_termino_operador','parser_1.py',131),
  ('termino_operador -> DIV factor termino_operador','termino_operador',3,'p_termino_operador','parser_1.py',132),
  ('termino_operador -> empty','termino_operador',1,'p_termino_operador','parser_1.py',133),
  ('factor -> PARIZQ expresion PARDER','factor',3,'p_factor','parser_1.py',137),
  ('factor -> MAS var_cte','factor',2,'p_factor','parser_1.py',138),
  ('factor -> MENOS var_cte','factor',2,'p_factor','parser_1.py',139),
  ('factor -> var_cte','factor',1,'p_factor','parser_1.py',140),
  ('factor -> empty','factor',1,'p_factor','parser_1.py',141),
  ('var_cte -> ID','var_cte',1,'p_var_cte','parser_1.py',145),
  ('var_cte -> CTEI','var_cte',1,'p_var_cte','parser_1.py',146),
  ('var_cte -> CTEF','var_cte',1,'p_var_cte','parser_1.py',147),
  ('var_cte -> CTEC','var_cte',1,'p_var_cte','parser_1.py',148),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',151),
]
