
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARR BOOL CHAR COMA CORCHDER CORCHIZQ CTEB CTEC CTEF CTEI CTESTRING DIFF DIV DO DOSPUN ELSE FLOAT FOR FUNC ID IF IGIG IGUAL INT LLAVDER LLAVIZQ MAIN MAS MAYIG MAYOR MEDIA MENIG MENOR MENOS MOD OR PARDER PARIZQ POR PROGRAM PUN PUNCOM READ RETURN TO VAR VOID WHILE WRITEprogram : goto_main PROGRAM ID PUNCOM VAR vars acum_func aux_goto_main mainmain : MAIN PARIZQ PARDER bloquefuncion : FUNC TIPO ID insert_dirfunc PARIZQ param PARDER save_params vars_local bloque_func RETURN exp PUNCOM end_function\n               | FUNC VOID ID insert_dirfunc PARIZQ param PARDER save_params vars_local bloque_func RETURN PUNCOM end_functionparam : TIPO ID COMA param\n             | TIPO IDparam : emptyacum_func : funcion acum_func\n                  | emptycall_func : ID func_name_call PARIZQ gen_era argumentos_llamada verify_param_count PARDER generate_gosub PUNCOMargumentos_llamada : expresion verify_argument_type COMA argumentos_llamada increment_param_counter\n                          | expresion verify_argument_type\n                          | emptyid_lista : ID COMA id_lista\n               | IDarreglos : TIPO ID CORCHIZQ CTEI PUN PUN PUN CORCHDER PUNCOMvars : id_lista DOSPUN TIPO PUNCOM vars\n            | arreglos\n            | emptyTIPO : INT\n            | FLOAT\n            | CHAR\n            | BOOLbloque : LLAVIZQ multiples_estatutos LLAVDERestatuto : asignacion\n                 | condicion\n                 | escritura\n                 | lectura\n                 | while_condicion\n                 | call_func\n                 | funcion_mediamultiples_estatutos : estatuto multiples_estatutos\n                       | emptyasignacion : ID IGUAL expresion PUNCOMlectura : READ PARIZQ ID PARDER PUNCOMescritura : WRITE PARIZQ print_expresion PARDER PUNCOMprint_expresion : expresion multiples_print\n                       | CTESTRING multiples_printmultiples_print : COMA  print_expresion\n                 | emptycondicion : IF PARIZQ expresion PARDER verificar_if bloque verificar_bloque_if PUNCOM\n                 | IF PARIZQ expresion PARDER verificar_if bloque verificar_bloque_else ELSE bloque verificar_bloque_if PUNCOMwhile_condicion : WHILE PARIZQ save_position_while expresion check_while_exp PARDER DO bloque fill_jump_whileexpresion : expresion AND expresionexpresion : expresion OR expresionexpresion : exp \n                 | exp MAYOR exp\n                 | exp MENOR exp\n                 | exp DIFF exp\n                 | exp IGIG exp\n                 | exp MAYIG exp\n                 | exp MENIG expexp : termino exp_operacionexp_operacion : MAS termino exp_operacion\n                     | MENOS termino exp_operacion\n                     | emptytermino : factor termino_operadortermino_operador : POR factor termino_operador\n                        | DIV factor termino_operador\n                        | emptyfactor : PARIZQ expresion PARDER\n              | MAS var_cte\n              | MENOS var_cte\n              | var_cte\n              | emptyvar_cte : ID\n               | CTEI\n               | CTEF\n               | CTEC\n               | CTEBfuncion_media : MEDIA PARIZQ argumentos_funcion PARDER PUNCOMargumentos_funcion : CTEI COMA argumentos_funcion\n                          | CTEIempty :goto_main : aux_goto_main : verificar_if : verificar_bloque_if : verificar_bloque_else : save_position_while : check_while_exp : fill_jump_while : insert_dirfunc :save_params : vars_local : VAR varsbloque_func : start_cuad bloquestart_cuad : end_function : generate_gosub :verify_param_count :increment_param_counter :verify_argument_type :func_name_call :gen_era :'
    
_lr_action_items = {'PROGRAM':([0,2,],[-75,3,]),'$end':([1,31,46,73,],[0,-1,-2,-24,]),'ID':([3,6,10,13,14,15,16,17,27,28,35,47,48,54,56,57,58,59,60,61,62,73,75,77,78,79,80,91,92,94,100,106,111,113,114,115,116,117,118,119,120,121,123,124,127,128,133,137,165,167,169,171,185,193,195,197,200,202,],[4,7,23,-20,-21,-22,-23,7,33,34,7,63,69,63,-25,-26,-27,-28,-29,-30,-31,-24,86,86,86,105,-80,86,86,86,-94,86,7,-34,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-36,-35,-71,86,86,-41,-82,-10,-43,-42,]),'PUNCOM':([4,13,14,15,16,29,72,73,75,86,87,88,89,90,93,95,96,97,98,99,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,135,140,142,148,149,150,151,152,153,154,155,156,157,158,159,160,171,173,174,175,176,177,180,182,184,186,191,199,201,],[5,-20,-21,-22,-23,35,85,-24,-74,-66,113,-46,-74,-74,-64,-65,-67,-68,-69,-70,-74,-74,-74,-74,-74,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,-62,-63,165,167,169,-44,-45,-47,-48,-49,-50,-51,-52,-74,-74,-74,-74,-61,-74,183,-54,-55,-58,-59,-78,189,-89,193,197,-78,202,]),'VAR':([5,70,71,83,84,],[6,-84,-84,111,111,]),'FUNC':([6,8,11,12,19,35,40,85,183,189,190,196,],[-74,21,-18,-19,21,-74,-17,-16,-88,-88,-4,-3,]),'MAIN':([6,8,11,12,18,19,20,25,26,35,40,85,183,189,190,196,],[-74,-74,-18,-19,-76,-74,-9,32,-8,-74,-17,-16,-88,-88,-4,-3,]),'INT':([6,21,22,35,43,44,82,111,],[13,13,13,13,13,13,13,13,]),'FLOAT':([6,21,22,35,43,44,82,111,],[14,14,14,14,14,14,14,14,]),'CHAR':([6,21,22,35,43,44,82,111,],[15,15,15,15,15,15,15,15,]),'BOOL':([6,21,22,35,43,44,82,111,],[16,16,16,16,16,16,16,16,]),'COMA':([7,69,78,86,88,89,90,93,95,96,97,98,99,100,103,104,108,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,137,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,174,175,176,177,179,185,],[17,82,-74,-66,-46,-74,-74,-64,-65,-67,-68,-69,-70,-94,137,137,143,-74,-74,-74,-74,-74,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,-62,-63,-74,-74,-44,-45,-47,-48,-49,-50,-51,-52,-74,-74,-74,-74,-61,-92,-65,-54,-55,-58,-59,185,-74,]),'DOSPUN':([7,9,24,],[-15,22,-14,]),'LLAVIZQ':([11,12,35,40,42,85,110,111,112,134,145,146,164,188,194,],[-18,-19,-74,-17,47,-16,-87,-74,-87,-77,47,-85,47,47,47,]),'VOID':([21,],[28,]),'CORCHIZQ':([23,],[30,]),'CTEI':([30,75,77,78,80,81,91,92,94,100,106,114,115,116,117,118,119,120,121,123,124,127,128,133,137,143,171,185,],[36,96,96,96,-80,108,96,96,96,-94,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,108,96,96,]),'PARIZQ':([32,33,34,38,39,63,64,65,66,67,68,75,76,77,78,80,91,100,106,114,115,116,117,118,119,120,121,123,124,127,128,133,137,171,185,],[37,-83,-83,43,44,-93,77,78,79,80,81,91,100,91,91,-80,91,-94,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'PUN':([36,41,45,],[41,45,52,]),'PARDER':([37,43,44,49,50,51,69,77,78,80,82,86,88,89,90,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,139,141,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,168,170,174,175,176,177,178,179,185,192,198,],[42,-74,-74,70,-7,71,-6,-74,-74,-80,-74,-66,-46,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,134,135,-74,-74,140,-74,142,-73,-5,-74,-74,-74,-74,-74,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,160,-62,-63,-74,-37,-74,-40,-38,-81,-44,-45,-47,-48,-49,-50,-51,-52,-74,-74,-74,-74,-61,-90,-92,-13,-39,181,-72,-54,-55,-58,-59,184,-12,-74,-91,-11,]),'LLAVDER':([47,53,54,55,56,57,58,59,60,61,62,73,74,113,165,167,169,193,195,197,200,202,],[-74,73,-74,-33,-25,-26,-27,-28,-29,-30,-31,-24,-32,-34,-36,-35,-71,-41,-82,-10,-43,-42,]),'IF':([47,54,56,57,58,59,60,61,62,73,113,165,167,169,193,195,197,200,202,],[64,64,-25,-26,-27,-28,-29,-30,-31,-24,-34,-36,-35,-71,-41,-82,-10,-43,-42,]),'WRITE':([47,54,56,57,58,59,60,61,62,73,113,165,167,169,193,195,197,200,202,],[65,65,-25,-26,-27,-28,-29,-30,-31,-24,-34,-36,-35,-71,-41,-82,-10,-43,-42,]),'READ':([47,54,56,57,58,59,60,61,62,73,113,165,167,169,193,195,197,200,202,],[66,66,-25,-26,-27,-28,-29,-30,-31,-24,-34,-36,-35,-71,-41,-82,-10,-43,-42,]),'WHILE':([47,54,56,57,58,59,60,61,62,73,113,165,167,169,193,195,197,200,202,],[67,67,-25,-26,-27,-28,-29,-30,-31,-24,-34,-36,-35,-71,-41,-82,-10,-43,-42,]),'MEDIA':([47,54,56,57,58,59,60,61,62,73,113,165,167,169,193,195,197,200,202,],[68,68,-25,-26,-27,-28,-29,-30,-31,-24,-34,-36,-35,-71,-41,-82,-10,-43,-42,]),'CORCHDER':([52,],[72,]),'IGUAL':([63,],[75,]),'RETURN':([73,144,147,172,],[-24,171,173,-86,]),'ELSE':([73,180,187,],[-24,-79,194,]),'MAS':([75,77,78,80,86,89,90,91,93,95,96,97,98,99,100,106,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,137,156,157,158,159,160,163,171,176,177,185,],[92,92,92,-80,-66,123,-74,92,-64,-65,-67,-68,-69,-70,-94,92,92,92,92,92,92,92,92,92,92,92,-57,92,92,-60,-62,-63,92,92,123,123,-74,-74,-61,-65,92,-58,-59,92,]),'MENOS':([75,77,78,80,86,89,90,91,93,95,96,97,98,99,100,106,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,137,156,157,158,159,160,163,171,176,177,185,],[94,94,94,-80,-66,124,-74,94,-64,-65,-67,-68,-69,-70,-94,94,94,94,94,94,94,94,94,94,94,94,-57,94,94,-60,-62,-63,94,94,124,124,-74,-74,-61,-65,94,-58,-59,94,]),'CTEF':([75,77,78,80,91,92,94,100,106,114,115,116,117,118,119,120,121,123,124,127,128,133,137,171,185,],[97,97,97,-80,97,97,97,-94,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'CTEC':([75,77,78,80,91,92,94,100,106,114,115,116,117,118,119,120,121,123,124,127,128,133,137,171,185,],[98,98,98,-80,98,98,98,-94,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'CTEB':([75,77,78,80,91,92,94,100,106,114,115,116,117,118,119,120,121,123,124,127,128,133,137,171,185,],[99,99,99,-80,99,99,99,-94,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'POR':([75,77,78,80,86,90,91,93,95,96,97,98,99,100,106,114,115,116,117,118,119,120,121,123,124,127,128,131,132,133,137,158,159,160,163,171,185,],[-74,-74,-74,-80,-66,127,-74,-64,-65,-67,-68,-69,-70,-94,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-62,-63,-74,-74,127,127,-61,-65,-74,-74,]),'DIV':([75,77,78,80,86,90,91,93,95,96,97,98,99,100,106,114,115,116,117,118,119,120,121,123,124,127,128,131,132,133,137,158,159,160,163,171,185,],[-74,-74,-74,-80,-66,128,-74,-64,-65,-67,-68,-69,-70,-94,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-74,-62,-63,-74,-74,128,128,-61,-65,-74,-74,]),'MAYOR':([75,77,78,80,86,88,89,90,91,93,95,96,97,98,99,100,106,114,115,122,123,124,125,126,127,128,129,131,132,133,137,156,157,158,159,160,163,174,175,176,177,185,],[-74,-74,-74,-80,-66,116,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,-62,-63,-74,-74,-74,-74,-74,-74,-61,-65,-54,-55,-58,-59,-74,]),'MENOR':([75,77,78,80,86,88,89,90,91,93,95,96,97,98,99,100,106,114,115,122,123,124,125,126,127,128,129,131,132,133,137,156,157,158,159,160,163,174,175,176,177,185,],[-74,-74,-74,-80,-66,117,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,-62,-63,-74,-74,-74,-74,-74,-74,-61,-65,-54,-55,-58,-59,-74,]),'DIFF':([75,77,78,80,86,88,89,90,91,93,95,96,97,98,99,100,106,114,115,122,123,124,125,126,127,128,129,131,132,133,137,156,157,158,159,160,163,174,175,176,177,185,],[-74,-74,-74,-80,-66,118,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,-62,-63,-74,-74,-74,-74,-74,-74,-61,-65,-54,-55,-58,-59,-74,]),'IGIG':([75,77,78,80,86,88,89,90,91,93,95,96,97,98,99,100,106,114,115,122,123,124,125,126,127,128,129,131,132,133,137,156,157,158,159,160,163,174,175,176,177,185,],[-74,-74,-74,-80,-66,119,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,-62,-63,-74,-74,-74,-74,-74,-74,-61,-65,-54,-55,-58,-59,-74,]),'MAYIG':([75,77,78,80,86,88,89,90,91,93,95,96,97,98,99,100,106,114,115,122,123,124,125,126,127,128,129,131,132,133,137,156,157,158,159,160,163,174,175,176,177,185,],[-74,-74,-74,-80,-66,120,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,-62,-63,-74,-74,-74,-74,-74,-74,-61,-65,-54,-55,-58,-59,-74,]),'MENIG':([75,77,78,80,86,88,89,90,91,93,95,96,97,98,99,100,106,114,115,122,123,124,125,126,127,128,129,131,132,133,137,156,157,158,159,160,163,174,175,176,177,185,],[-74,-74,-74,-80,-66,121,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,-62,-63,-74,-74,-74,-74,-74,-74,-61,-65,-54,-55,-58,-59,-74,]),'AND':([75,77,78,80,86,87,88,89,90,91,93,95,96,97,98,99,100,101,103,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,141,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,174,175,176,177,185,],[-74,-74,-74,-80,-66,114,-46,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,114,114,-74,-74,-74,-74,-74,-74,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,114,-62,-63,-74,-74,114,114,114,-47,-48,-49,-50,-51,-52,-74,-74,-74,-74,-61,114,-65,-54,-55,-58,-59,-74,]),'OR':([75,77,78,80,86,87,88,89,90,91,93,95,96,97,98,99,100,101,103,106,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,141,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,174,175,176,177,185,],[-74,-74,-74,-80,-66,115,-46,-74,-74,-74,-64,-65,-67,-68,-69,-70,-94,115,115,-74,-74,-74,-74,-74,-74,-74,-74,-74,-53,-74,-74,-56,-57,-74,-74,-60,115,-62,-63,-74,-74,115,115,115,-47,-48,-49,-50,-51,-52,-74,-74,-74,-74,-61,115,-65,-54,-55,-58,-59,-74,]),'CTESTRING':([78,137,],[104,104,]),'DO':([181,],[188,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([0,],[2,]),'vars':([6,35,111,],[8,40,146,]),'id_lista':([6,17,35,111,],[9,24,9,9,]),'TIPO':([6,21,22,35,43,44,82,111,],[10,27,29,10,48,48,48,10,]),'arreglos':([6,35,111,],[11,11,11,]),'empty':([6,8,19,35,43,44,47,54,75,77,78,82,89,90,91,103,104,106,111,114,115,116,117,118,119,120,121,123,124,127,128,133,137,156,157,158,159,171,185,],[12,20,20,12,50,50,55,55,95,95,95,50,125,129,95,138,138,95,12,95,95,95,95,95,95,95,95,95,95,95,95,163,95,125,125,129,129,95,163,]),'acum_func':([8,19,],[18,26,]),'funcion':([8,19,],[19,19,]),'aux_goto_main':([18,],[25,]),'main':([25,],[31,]),'insert_dirfunc':([33,34,],[38,39,]),'bloque':([42,145,164,188,194,],[46,172,180,195,199,]),'param':([43,44,82,],[49,51,109,]),'multiples_estatutos':([47,54,],[53,74,]),'estatuto':([47,54,],[54,54,]),'asignacion':([47,54,],[56,56,]),'condicion':([47,54,],[57,57,]),'escritura':([47,54,],[58,58,]),'lectura':([47,54,],[59,59,]),'while_condicion':([47,54,],[60,60,]),'call_func':([47,54,],[61,61,]),'funcion_media':([47,54,],[62,62,]),'func_name_call':([63,],[76,]),'save_params':([70,71,],[83,84,]),'expresion':([75,77,78,91,106,114,115,133,137,185,],[87,101,103,130,141,148,149,162,103,162,]),'exp':([75,77,78,91,106,114,115,116,117,118,119,120,121,133,137,171,185,],[88,88,88,88,88,88,88,150,151,152,153,154,155,88,88,182,88,]),'termino':([75,77,78,91,106,114,115,116,117,118,119,120,121,123,124,133,137,171,185,],[89,89,89,89,89,89,89,89,89,89,89,89,89,156,157,89,89,89,89,]),'factor':([75,77,78,91,106,114,115,116,117,118,119,120,121,123,124,127,128,133,137,171,185,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,158,159,90,90,90,90,]),'var_cte':([75,77,78,91,92,94,106,114,115,116,117,118,119,120,121,123,124,127,128,133,137,171,185,],[93,93,93,93,131,132,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'print_expresion':([78,137,],[102,166,]),'save_position_while':([80,],[106,]),'argumentos_funcion':([81,143,],[107,170,]),'vars_local':([83,84,],[110,112,]),'exp_operacion':([89,156,157,],[122,174,175,]),'termino_operador':([90,158,159,],[126,176,177,]),'gen_era':([100,],[133,]),'multiples_print':([103,104,],[136,139,]),'bloque_func':([110,112,],[144,147,]),'start_cuad':([110,112,],[145,145,]),'argumentos_llamada':([133,185,],[161,192,]),'verificar_if':([134,],[164,]),'check_while_exp':([141,],[168,]),'verify_param_count':([161,],[178,]),'verify_argument_type':([162,],[179,]),'verificar_bloque_if':([180,199,],[186,201,]),'verificar_bloque_else':([180,],[187,]),'end_function':([183,189,],[190,196,]),'generate_gosub':([184,],[191,]),'increment_param_counter':([192,],[198,]),'fill_jump_while':([195,],[200,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> goto_main PROGRAM ID PUNCOM VAR vars acum_func aux_goto_main main','program',9,'p_program','parser_1.py',183),
  ('main -> MAIN PARIZQ PARDER bloque','main',4,'p_main','parser_1.py',202),
  ('funcion -> FUNC TIPO ID insert_dirfunc PARIZQ param PARDER save_params vars_local bloque_func RETURN exp PUNCOM end_function','funcion',14,'p_funcion','parser_1.py',207),
  ('funcion -> FUNC VOID ID insert_dirfunc PARIZQ param PARDER save_params vars_local bloque_func RETURN PUNCOM end_function','funcion',13,'p_funcion','parser_1.py',208),
  ('param -> TIPO ID COMA param','param',4,'p_param','parser_1.py',212),
  ('param -> TIPO ID','param',2,'p_param','parser_1.py',213),
  ('param -> empty','param',1,'p_param_empty','parser_1.py',223),
  ('acum_func -> funcion acum_func','acum_func',2,'p_acum_func','parser_1.py',227),
  ('acum_func -> empty','acum_func',1,'p_acum_func','parser_1.py',228),
  ('call_func -> ID func_name_call PARIZQ gen_era argumentos_llamada verify_param_count PARDER generate_gosub PUNCOM','call_func',9,'p_call_func','parser_1.py',232),
  ('argumentos_llamada -> expresion verify_argument_type COMA argumentos_llamada increment_param_counter','argumentos_llamada',5,'p_argumentos_llamada','parser_1.py',237),
  ('argumentos_llamada -> expresion verify_argument_type','argumentos_llamada',2,'p_argumentos_llamada','parser_1.py',238),
  ('argumentos_llamada -> empty','argumentos_llamada',1,'p_argumentos_llamada','parser_1.py',239),
  ('id_lista -> ID COMA id_lista','id_lista',3,'p_id_lista','parser_1.py',256),
  ('id_lista -> ID','id_lista',1,'p_id_lista','parser_1.py',257),
  ('arreglos -> TIPO ID CORCHIZQ CTEI PUN PUN PUN CORCHDER PUNCOM','arreglos',9,'p_arreglos','parser_1.py',264),
  ('vars -> id_lista DOSPUN TIPO PUNCOM vars','vars',5,'p_vars','parser_1.py',273),
  ('vars -> arreglos','vars',1,'p_vars','parser_1.py',274),
  ('vars -> empty','vars',1,'p_vars','parser_1.py',275),
  ('TIPO -> INT','TIPO',1,'p_TIPO','parser_1.py',310),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','parser_1.py',311),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','parser_1.py',312),
  ('TIPO -> BOOL','TIPO',1,'p_TIPO','parser_1.py',313),
  ('bloque -> LLAVIZQ multiples_estatutos LLAVDER','bloque',3,'p_bloque','parser_1.py',356),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser_1.py',363),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','parser_1.py',364),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser_1.py',365),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','parser_1.py',366),
  ('estatuto -> while_condicion','estatuto',1,'p_estatuto','parser_1.py',367),
  ('estatuto -> call_func','estatuto',1,'p_estatuto','parser_1.py',368),
  ('estatuto -> funcion_media','estatuto',1,'p_estatuto','parser_1.py',369),
  ('multiples_estatutos -> estatuto multiples_estatutos','multiples_estatutos',2,'p_multiples_estatutos','parser_1.py',375),
  ('multiples_estatutos -> empty','multiples_estatutos',1,'p_multiples_estatutos','parser_1.py',376),
  ('asignacion -> ID IGUAL expresion PUNCOM','asignacion',4,'p_asignacion','parser_1.py',382),
  ('lectura -> READ PARIZQ ID PARDER PUNCOM','lectura',5,'p_lectura','parser_1.py',413),
  ('escritura -> WRITE PARIZQ print_expresion PARDER PUNCOM','escritura',5,'p_escritura','parser_1.py',427),
  ('print_expresion -> expresion multiples_print','print_expresion',2,'p_print_expresion','parser_1.py',431),
  ('print_expresion -> CTESTRING multiples_print','print_expresion',2,'p_print_expresion','parser_1.py',432),
  ('multiples_print -> COMA print_expresion','multiples_print',2,'p_multiples_print','parser_1.py',444),
  ('multiples_print -> empty','multiples_print',1,'p_multiples_print','parser_1.py',445),
  ('condicion -> IF PARIZQ expresion PARDER verificar_if bloque verificar_bloque_if PUNCOM','condicion',8,'p_condicion','parser_1.py',448),
  ('condicion -> IF PARIZQ expresion PARDER verificar_if bloque verificar_bloque_else ELSE bloque verificar_bloque_if PUNCOM','condicion',11,'p_condicion','parser_1.py',449),
  ('while_condicion -> WHILE PARIZQ save_position_while expresion check_while_exp PARDER DO bloque fill_jump_while','while_condicion',9,'p_while_condicion','parser_1.py',452),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_and','parser_1.py',460),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_or','parser_1.py',465),
  ('expresion -> exp','expresion',1,'p_expresion','parser_1.py',471),
  ('expresion -> exp MAYOR exp','expresion',3,'p_expresion','parser_1.py',472),
  ('expresion -> exp MENOR exp','expresion',3,'p_expresion','parser_1.py',473),
  ('expresion -> exp DIFF exp','expresion',3,'p_expresion','parser_1.py',474),
  ('expresion -> exp IGIG exp','expresion',3,'p_expresion','parser_1.py',475),
  ('expresion -> exp MAYIG exp','expresion',3,'p_expresion','parser_1.py',476),
  ('expresion -> exp MENIG exp','expresion',3,'p_expresion','parser_1.py',477),
  ('exp -> termino exp_operacion','exp',2,'p_exp','parser_1.py',503),
  ('exp_operacion -> MAS termino exp_operacion','exp_operacion',3,'p_exp_operacion','parser_1.py',508),
  ('exp_operacion -> MENOS termino exp_operacion','exp_operacion',3,'p_exp_operacion','parser_1.py',509),
  ('exp_operacion -> empty','exp_operacion',1,'p_exp_operacion','parser_1.py',510),
  ('termino -> factor termino_operador','termino',2,'p_termino','parser_1.py',522),
  ('termino_operador -> POR factor termino_operador','termino_operador',3,'p_termino_operador','parser_1.py',526),
  ('termino_operador -> DIV factor termino_operador','termino_operador',3,'p_termino_operador','parser_1.py',527),
  ('termino_operador -> empty','termino_operador',1,'p_termino_operador','parser_1.py',528),
  ('factor -> PARIZQ expresion PARDER','factor',3,'p_factor','parser_1.py',538),
  ('factor -> MAS var_cte','factor',2,'p_factor','parser_1.py',539),
  ('factor -> MENOS var_cte','factor',2,'p_factor','parser_1.py',540),
  ('factor -> var_cte','factor',1,'p_factor','parser_1.py',541),
  ('factor -> empty','factor',1,'p_factor','parser_1.py',542),
  ('var_cte -> ID','var_cte',1,'p_var_cte','parser_1.py',546),
  ('var_cte -> CTEI','var_cte',1,'p_var_cte','parser_1.py',547),
  ('var_cte -> CTEF','var_cte',1,'p_var_cte','parser_1.py',548),
  ('var_cte -> CTEC','var_cte',1,'p_var_cte','parser_1.py',549),
  ('var_cte -> CTEB','var_cte',1,'p_var_cte','parser_1.py',550),
  ('funcion_media -> MEDIA PARIZQ argumentos_funcion PARDER PUNCOM','funcion_media',5,'p_funcion_media','parser_1.py',573),
  ('argumentos_funcion -> CTEI COMA argumentos_funcion','argumentos_funcion',3,'p_argumentos_funcion','parser_1.py',585),
  ('argumentos_funcion -> CTEI','argumentos_funcion',1,'p_argumentos_funcion','parser_1.py',586),
  ('empty -> <empty>','empty',0,'p_empty','parser_1.py',599),
  ('goto_main -> <empty>','goto_main',0,'p_goto_main','parser_1.py',851),
  ('aux_goto_main -> <empty>','aux_goto_main',0,'p_aux_goto_main','parser_1.py',856),
  ('verificar_if -> <empty>','verificar_if',0,'p_verificar_if','parser_1.py',865),
  ('verificar_bloque_if -> <empty>','verificar_bloque_if',0,'p_verificar_bloque_if','parser_1.py',880),
  ('verificar_bloque_else -> <empty>','verificar_bloque_else',0,'p_verificar_bloque_else','parser_1.py',893),
  ('save_position_while -> <empty>','save_position_while',0,'p_save_position_while','parser_1.py',906),
  ('check_while_exp -> <empty>','check_while_exp',0,'p_check_while_exp','parser_1.py',913),
  ('fill_jump_while -> <empty>','fill_jump_while',0,'p_fill_jump_while','parser_1.py',927),
  ('insert_dirfunc -> <empty>','insert_dirfunc',0,'p_insert_dirfunc','parser_1.py',941),
  ('save_params -> <empty>','save_params',0,'p_save_params','parser_1.py',964),
  ('vars_local -> VAR vars','vars_local',2,'p_vars_local','parser_1.py',999),
  ('bloque_func -> start_cuad bloque','bloque_func',2,'p_bloque_func','parser_1.py',1018),
  ('start_cuad -> <empty>','start_cuad',0,'p_start_cuad','parser_1.py',1021),
  ('end_function -> <empty>','end_function',0,'p_end_function','parser_1.py',1034),
  ('generate_gosub -> <empty>','generate_gosub',0,'p_generate_gosub','parser_1.py',1065),
  ('verify_param_count -> <empty>','verify_param_count',0,'p_verify_param_count','parser_1.py',1083),
  ('increment_param_counter -> <empty>','increment_param_counter',0,'p_increment_param_counter','parser_1.py',1092),
  ('verify_argument_type -> <empty>','verify_argument_type',0,'p_verify_argument_type','parser_1.py',1103),
  ('func_name_call -> <empty>','func_name_call',0,'p_func_name_call','parser_1.py',1126),
  ('gen_era -> <empty>','gen_era',0,'p_gen_era','parser_1.py',1137),
]
